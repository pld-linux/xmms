diff -Naur xmms-1.2.4/Input/mpg123/fileinfo.c xmms-1.2.4j-20001128/Input/mpg123/fileinfo.c
--- xmms-1.2.4/Input/mpg123/fileinfo.c	Tue Nov 28 07:20:57 2000
+++ xmms-1.2.4j-20001128/Input/mpg123/fileinfo.c	Tue Nov 28 16:31:32 2000
@@ -22,6 +22,11 @@
 #include <stdarg.h>
 #include "mpg123.h"
 
+#include "config.h"
+#ifdef KANJI
+#  include "xmms/kanji.h"
+#endif
+
 static GtkWidget *window = NULL;
 static GtkWidget *filename_entry, *id3_frame;
 static GtkWidget *title_entry, *artist_entry, *album_entry, *year_entry, *comment_entry;
@@ -42,9 +47,18 @@
 {
 	gint stripped_len;
 	gchar *text;
+#ifdef KANJI
+	gchar *euc_text;
+#endif
 
 	stripped_len = mpg123_strip_spaces(tag, length);
+#ifdef KANJI
+	euc_text = kanji_sjis2euc_string(tag);
+	text = g_strdup_printf("%-*.*s", stripped_len, stripped_len, euc_text);
+	free(euc_text);
+#else
 	text = g_strdup_printf("%-*.*s", stripped_len, stripped_len, tag);
+#endif
 	gtk_entry_set_text(entry, text);
 	g_free(text);
 }
@@ -53,9 +67,16 @@
 {
 	gchar *text;
 
+#ifdef KANJI
+	text = kanji_euc2sjis_string(gtk_entry_get_text(entry));
+#else
 	text = gtk_entry_get_text(entry);
+#endif
 	memset(tag, ' ', length);
 	memcpy(tag, text, strlen(text) > length ? length : strlen(text));
+#ifdef KANJI
+	free(text);
+#endif
 }
 
 static gint find_genre_id(gchar * text)
diff -Naur xmms-1.2.4/Makefile.am xmms-1.2.4j-20001128/Makefile.am
--- xmms-1.2.4/Makefile.am	Tue Aug  1 06:32:15 2000
+++ xmms-1.2.4j-20001128/Makefile.am	Tue Nov 28 16:31:32 2000
@@ -2,7 +2,7 @@
 
 bin_SCRIPTS = xmms-config
 
-EXTRA_DIST = xmms.spec xmms.spec.in FAQ xmms.m4
+EXTRA_DIST = xmms.spec xmms.spec.in FAQ xmms.m4 README.jp
 
 m4datadir = $(datadir)/aclocal
 m4data_DATA = xmms.m4
diff -Naur xmms-1.2.4/Makefile.in xmms-1.2.4j-20001128/Makefile.in
--- xmms-1.2.4/Makefile.in	Tue Nov 28 09:55:55 2000
+++ xmms-1.2.4j-20001128/Makefile.in	Tue Nov 28 16:51:27 2000
@@ -156,7 +158,7 @@
 
 bin_SCRIPTS = xmms-config
 
-EXTRA_DIST = xmms.spec xmms.spec.in FAQ xmms.m4
+EXTRA_DIST = xmms.spec xmms.spec.in FAQ xmms.m4 README.jp
 
 m4datadir = $(datadir)/aclocal
 m4data_DATA = xmms.m4
diff -Naur xmms-1.2.4/README.jp xmms-1.2.4j-20001128/README.jp
--- xmms-1.2.4/README.jp	Thu Jan  1 09:00:00 1970
+++ xmms-1.2.4j-20001128/README.jp	Tue Nov 28 16:31:32 2000
@@ -0,0 +1,76 @@
+xmmsのタグ表示/編集の日本語対応+α
+(C)Copyright 1999, 2000 by Hiroshi Takekawa <sian@big.or.jp>
+Last Modified: Tue Nov 28 16:30:10 2000.
+
+patchをあてた後、--enable-kanjiをつけてcompileしてください。
+skinの透過を有効にするにはさらに--enable-transparenthackとしてください。
+
+フォントの設定はxmmsのメニューからできます。フォントセットの使用、Xの
+フォントを使う、を有効にしてください。
+
+あまり参考になりませんが、私のノートではこのようになっています。
+naga10,-misc-fixed-medium-r-normal--10-90-75-75-c-50-jisx0201.1976-0
+
+HISTORY:
+2000/11/28: 1.2.4 release。
+2000/11/10: cvsの変更を反映。wchar.hのない（従来の方法の方の）コードが
+	    追従しきれてなかったので修正。Thanks to Toshiyuki Kawahara.
+2000/10/22: Xのfontで表示できるコードが入りはじめたので追従。どうやら
+	    まともに表示できるようなのでtexthackを廃止し、フォントの
+	    cache部分だけfontcacheとして残した。
+2000/10/17: wcharまわりのコードが入りはじめたので追従しはじめる。まだ
+            不完全。localeが正しく働かないとうまく表示されなくなる。
+            tagの処理等の関係上、glibc2ユーザも、まだ--enable-kanjiが
+	    必要。
+2000/09/21: 1.2.3 release。
+2000/09/17: イコライザの調整時に波の線がのこってしまうバグをとった。
+2000/09/15: cvsの変更を反映。
+2000/09/04: cvsの変更を反映。ja.poの更新。
+2000/08/30: cvsの変更を反映。追随。
+2000/08/11: cvsの変更を反映。ja.poの更新。
+2000/08/01: cvsの変更を反映。skinの色まわりは本家で修正された。ja.poの更新。
+2000/07/20: cvsの変更を反映
+2000/07/12: xmms-1.2.2 base。gdk_*_widthの一部を_measureに。
+            Thanks to Mr. Fumihiko Murata <fmurata@p1.tcnet.ne.jp>
+2000/07/07: さらに変更して...のつけ方を変えた。cvsの変更を反映。
+2000/07/03: 曲情報の構成の変更。cvsの変更を反映。
+2000/06/27: playlistの表示の高速化。cvsの変更を反映。
+2000/06/20: 1.2.1 release。
+2000/06/13: --enable-transparenthackを追加。1.2.0 release。
+2000/06/12: equalizerにfocusがある時は、sliderのボタンがみえるようにした。
+2000/06/08: equalizerのslider,graphをskinで上書きできるようにした。
+2000/06/07: equalizerのボタンをskinで上書きできるようにした。
+2000/06/05: Visualization Windowの透過
+2000/06/04: 曲名情報等の透過
+2000/06/03: 曲情報が短くなるデータの場合に落ちるbugをfix。cvsの変更を反映。
+2000/05/27: cvsの変更を反映し、poを更新した。
+2000/05/13: cvsの変更を反映し、depth32なbmpへの対応を書きなおした。
+2000/04/25: cvsの変更を反映
+2000/04/14: cvsの変更を反映
+2000/04/04: cvsの変更を反映
+2000/03/21: ja.poのupdate
+2000/03/06: 本家cvsの変更を反映
+2000/03/03: ja.poのupdate
+2000/02/26: ja.poのupdate
+2000/02/25: text_colorを廃止してskinのカラーを使うようにした。
+            skinの色がおかしいのを直した。
+            Thanks to Mr. Nobuhiro Yasutomi <nobu@rd.isac.co.jp> for his patch
+2000/02/09: wmxmmsのi18n, ja.po更新
+2000/02/07: gettextizeに伴いja.poを追加
+2000/02/01: xmms-1.0.1へのpatch
+2000/01/28: xmms-1.0.0へのpatch
+2000/01/24: widgetに入る文字列の長さの決定をgdk_text_width()にまかせるようにした。
+            fontから情報を得るのでcfg.text_heightを廃止した。
+2000/01/06: 長いこと懸案だったunexpected async reply問題がたぶん解決
+            なんかdepthが32なbmpがSkinにあったので対応。
+1999/12/01: playlist表示時にEUCを考慮して...をいれるようにした
+1999/11/15: xmms-0.9.5.1へのpatch(bug fix)
+1999/09/28: xmms-0.9.5.1へのpatch
+1999/09/24: xmms-0.9.5へのpatch(deleted)
+1999/08/08: xmms-0.9.1へのpatchを更新
+1999/06/19: xmms-0.9.1へのpatch(obsolete, deleted)
+1999/06/12: xmms-0.9へのpatch(obsolete, deleted)
+1999/04/14: beta1.1へのpatch(obsolete, deleted)
+1999/04/13: beta1へのpatch(obsolete, deleted)
+1999/02/15: alpha3へのpatch(obsolete, deleted)
+1999/02/11: alpha2へのpatch(obsolete, deleted)
diff -Naur xmms-1.2.4/acconfig.h xmms-1.2.4j-20001128/acconfig.h
--- xmms-1.2.4/acconfig.h	Tue Oct  3 00:28:40 2000
+++ xmms-1.2.4j-20001128/acconfig.h	Tue Nov 28 16:31:32 2000
@@ -8,9 +8,16 @@
 #undef HAVE_SYS_SOUNDCARD_H
 #undef WITH_CDINDEX
 #undef WITH_SM
+#undef KANJI
+#undef FONT_CACHE
 #undef ENABLE_NLS
 #undef HAVE_CATGETS
 #undef HAVE_GETTEXT
 #undef HAVE_LC_MESSAGES
 #undef HAVE_STPCPY
 #undef DISABLE_STRICT_FPE
+#undef NO_TRANSPARENT_EQ_GRAPH
+#undef NO_TRANSPARENT_EQ_SLIDER
+#undef NO_TRANSPARENT_TEXTBOX
+#undef NO_TRANSPARENT_VIS
+#undef NO_AUTO_SKIN_COMPLETION
diff -Naur xmms-1.2.4/configure.in xmms-1.2.4j-20001128/configure.in
--- xmms-1.2.4/configure.in	Tue Nov 28 09:40:19 2000
+++ xmms-1.2.4j-20001128/configure.in	Tue Nov 28 16:31:33 2000
@@ -53,8 +54,11 @@
 AM_PATH_GTK(1.2.2,,AC_MSG_ERROR([*** GTK+ >= 1.2.2 not installed - please install first ***]),gthread)
 AC_PATH_PROG(XMMS_PATH,xmms,no)
 
+GIVEN_CFLAGS=$CFLAGS
+
 LIBS_save=$LIBS
 LIBS="$LIBS $GTK_LIBS"
+AC_CHECK_LIB(ICE, IceOpenConnection)
 SM_LIBS=""
 AC_CHECK_LIB(SM, SmcOpenConnection,[
 AC_DEFINE(WITH_SM)
@@ -347,6 +351,8 @@
   VISUALIZATION_PLUGIN_DIR=Visualization
 fi
 
+CFLAGS=$GIVEN_CFLAGS
+
 AC_SUBST(INPUT_PLUGIN_DIR)
 AC_SUBST(OUTPUT_PLUGIN_DIR)
 AC_SUBST(EFFECT_PLUGIN_DIR)
@@ -366,6 +372,49 @@
 
 AC_SUBST(xmmsdir)
 AC_SUBST(plugindir)
+
+AC_ARG_ENABLE(kanji,
+    [  --enable-kanji          Enable kanji support.],
+    [  enable_kanji=$enableval ],
+    [  enable_kanji=no ])
+
+AC_ARG_ENABLE(fontcache,
+    [  --disable-fontcache     Disable font cache.],
+    [ enable_fontcache=$enableval ],
+    [ enable_fontcache=yes ])
+
+AC_ARG_ENABLE(transparenthack,
+    [  --enable-transparenthack Enable transparent hack.],
+    [  enable_transhack=$enableval ],
+    [  enable_transhack=no ])
+
+AC_MSG_CHECKING(if kanji support wanted)
+if test "$enable_kanji" = "yes"; then
+  AC_DEFINE(KANJI)
+  AC_MSG_RESULT(yes)
+else
+  AC_MSG_RESULT(no)
+fi
+
+AC_MSG_CHECKING(if fontcache wanted)
+if test "$enable_fontcache" = "yes"; then
+  AC_DEFINE(FONT_CACHE)
+  AC_MSG_RESULT(yes)
+else
+  AC_MSG_RESULT(no)
+fi
+
+AC_MSG_CHECKING(if transparent hack wanted)
+if test "$enable_transhack" != "yes"; then
+  AC_DEFINE(NO_TRANSPARENT_EQ_GRAPH)
+  AC_DEFINE(NO_TRANSPARENT_EQ_SLIDER)
+  AC_DEFINE(NO_TRANSPARENT_TEXTBOX)
+  dnl AC_DEFINE(NO_TRANSPARENT_VIS)
+  AC_DEFINE(NO_AUTO_SKIN_COMPLETION)
+  AC_MSG_RESULT(no)
+else
+  AC_MSG_RESULT(yes)
+fi
 
 AC_OUTPUT([
 Makefile
diff -Naur xmms-1.2.4/gnomexmms/gnomexmms.c xmms-1.2.4j-20001128/gnomexmms/gnomexmms.c
--- xmms-1.2.4/gnomexmms/gnomexmms.c	Thu Jul 20 16:44:38 2000
+++ xmms-1.2.4j-20001128/gnomexmms/gnomexmms.c	Tue Nov 28 16:31:33 2000
@@ -15,6 +15,7 @@
  *  along with this program; if not, write to the Free Software
  *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
  */
+#include <locale.h>
 #include <gtk/gtk.h>
 #include <gdk/gdkx.h>
 #include <X11/Xlib.h>
diff -Naur xmms-1.2.4/po/ja.po xmms-1.2.4j-20001128/po/ja.po
--- xmms-1.2.4/po/ja.po	Tue Nov 28 09:56:40 2000
+++ xmms-1.2.4j-20001128/po/ja.po	Tue Nov 28 16:55:24 2000
@@ -5,7 +5,7 @@
 msgid ""
 msgstr ""
 "Project-Id-Version: xmms 1.2.3\n"
-"POT-Creation-Date: 2000-11-27 18:56-0600\n"
+"POT-Creation-Date: 2000-11-18 12:01+0900\n"
 "PO-Revision-Date: 2000-11-18 11:44+09:00\n"
 "Last-Translator: Hiroshi Takekawa <takekawa@sr3.t.u-tokyo.ac.jp>\n"
 "Language-Team: Japanese <ja@li.org>\n"
@@ -34,17 +34,17 @@
 #: General/song_change/song_change.c:209 Input/cdaudio/cdindex.c:151
 #: Input/cdaudio/configure.c:304 Input/mikmod/plugin.c:122
 #: Input/mikmod/plugin.c:577 Input/mpg123/configure.c:730
-#: Input/mpg123/fileinfo.c:108 Input/mpg123/fileinfo.c:113
-#: Input/mpg123/fileinfo.c:147 Input/mpg123/fileinfo.c:151
-#: Input/mpg123/fileinfo.c:157 Input/mpg123/http.c:207 Input/mpg123/http.c:804
+#: Input/mpg123/fileinfo.c:103 Input/mpg123/fileinfo.c:108
+#: Input/mpg123/fileinfo.c:127 Input/mpg123/fileinfo.c:131
+#: Input/mpg123/fileinfo.c:137 Input/mpg123/http.c:208 Input/mpg123/http.c:805
 #: Input/tonegen/tonegen.c:46 Output/OSS/about.c:45 Output/OSS/configure.c:263
 #: Output/disk_writer/disk_writer.c:130 Output/disk_writer/disk_writer.c:376
 #: Output/esd/about.c:44 Output/esd/configure.c:183
 #: Visualization/blur_scope/config.c:99
 #: Visualization/opengl_spectrum/configure.c:71 libxmms/dirbrowser.c:290
 #: xmms/equalizer.c:1191 xmms/equalizer.c:1197 xmms/equalizer.c:1245
-#: xmms/equalizer.c:1254 xmms/equalizer.c:1502 xmms/main.c:2798
-#: xmms/prefswin.c:277 xmms/prefswin.c:296 xmms/prefswin.c:920 xmms/util.c:482
+#: xmms/equalizer.c:1254 xmms/equalizer.c:1502 xmms/main.c:2799
+#: xmms/prefswin.c:277 xmms/prefswin.c:296 xmms/prefswin.c:908 xmms/util.c:482
 msgid "Ok"
 msgstr "Ok"
 
@@ -98,18 +98,18 @@
 #: General/ir/configure.c:201 General/ir/configure.c:362
 #: General/joystick/configure.c:268 General/song_change/song_change.c:216
 #: Input/cdaudio/configure.c:311 Input/mikmod/plugin.c:584
-#: Input/mpg123/configure.c:737 Input/mpg123/fileinfo.c:319
+#: Input/mpg123/configure.c:737 Input/mpg123/fileinfo.c:275
 #: Output/OSS/configure.c:269 Output/disk_writer/disk_writer.c:383
 #: Output/esd/configure.c:190 Visualization/blur_scope/config.c:107
 #: Visualization/opengl_spectrum/configure.c:78 libxmms/dirbrowser.c:298
 #: xmms/equalizer.c:1191 xmms/equalizer.c:1197 xmms/equalizer.c:1245
-#: xmms/equalizer.c:1254 xmms/equalizer.c:1506 xmms/main.c:1353
-#: xmms/prefswin.c:924 xmms/util.c:502
+#: xmms/equalizer.c:1254 xmms/equalizer.c:1506 xmms/main.c:1355
+#: xmms/prefswin.c:912 xmms/util.c:502
 msgid "Cancel"
 msgstr "取消"
 
 #: Effect/echo_plugin/gui.c:150 Effect/stereo_plugin/stereo.c:136
-#: General/joystick/configure.c:274 xmms/equalizer.c:1512 xmms/prefswin.c:928
+#: General/joystick/configure.c:274 xmms/equalizer.c:1512 xmms/prefswin.c:916
 msgid "Apply"
 msgstr "適用"
 
@@ -194,7 +194,7 @@
 msgid "Repeat"
 msgstr "繰り返し"
 
-#: General/ir/configure.c:27 xmms/prefswin.c:873
+#: General/ir/configure.c:27 xmms/prefswin.c:861
 msgid "Playlist"
 msgstr "プレイリスト"
 
@@ -276,8 +276,8 @@
 msgid "General"
 msgstr "一般"
 
-#: General/ir/about.c:27 xmms/prefswin.c:596 xmms/prefswin.c:629
-#: xmms/prefswin.c:666 xmms/prefswin.c:706 xmms/prefswin.c:752
+#: General/ir/about.c:27 xmms/prefswin.c:584 xmms/prefswin.c:617
+#: xmms/prefswin.c:654 xmms/prefswin.c:694 xmms/prefswin.c:740
 msgid "About"
 msgstr "このソフトについて"
 
@@ -464,599 +464,599 @@
 msgid "Wave Player %s"
 msgstr "Waveファイルプレイヤー %s"
 
-#: Input/mpg123/mpg123.c:32
+#: Input/mpg123/mpg123.c:31
 msgid "Blues"
 msgstr "Blues"
 
-#: Input/mpg123/mpg123.c:32
+#: Input/mpg123/mpg123.c:31
 msgid "Classic Rock"
 msgstr "Classic Rock"
 
-#: Input/mpg123/mpg123.c:32
+#: Input/mpg123/mpg123.c:31
 msgid "Country"
 msgstr "Country"
 
-#: Input/mpg123/mpg123.c:32
+#: Input/mpg123/mpg123.c:31
 msgid "Dance"
 msgstr "Dance"
 
-#: Input/mpg123/mpg123.c:33
+#: Input/mpg123/mpg123.c:32
 msgid "Disco"
 msgstr "Disco"
 
-#: Input/mpg123/mpg123.c:33
+#: Input/mpg123/mpg123.c:32
 msgid "Funk"
 msgstr "Funk"
 
-#: Input/mpg123/mpg123.c:33
+#: Input/mpg123/mpg123.c:32
 msgid "Grunge"
 msgstr "Grunge"
 
-#: Input/mpg123/mpg123.c:33
+#: Input/mpg123/mpg123.c:32
 msgid "Hip-Hop"
 msgstr "Hip-Hop"
 
-#: Input/mpg123/mpg123.c:34
+#: Input/mpg123/mpg123.c:33
 msgid "Jazz"
 msgstr "Jazz"
 
-#: Input/mpg123/mpg123.c:34
+#: Input/mpg123/mpg123.c:33
 msgid "Metal"
 msgstr "Metal"
 
-#: Input/mpg123/mpg123.c:34
+#: Input/mpg123/mpg123.c:33
 msgid "New Age"
 msgstr "New Age"
 
-#: Input/mpg123/mpg123.c:34
+#: Input/mpg123/mpg123.c:33
 msgid "Oldies"
 msgstr "Oldies"
 
-#: Input/mpg123/mpg123.c:35
+#: Input/mpg123/mpg123.c:34
 msgid "Other"
 msgstr "Other"
 
-#: Input/mpg123/mpg123.c:35
+#: Input/mpg123/mpg123.c:34
 msgid "Pop"
 msgstr "Pop"
 
-#: Input/mpg123/mpg123.c:35
+#: Input/mpg123/mpg123.c:34
 msgid "R&B"
 msgstr "R&B"
 
-#: Input/mpg123/mpg123.c:35
+#: Input/mpg123/mpg123.c:34
 msgid "Rap"
 msgstr "Rap"
 
-#: Input/mpg123/mpg123.c:35
+#: Input/mpg123/mpg123.c:34
 msgid "Reggae"
 msgstr "Reggae"
 
-#: Input/mpg123/mpg123.c:36
+#: Input/mpg123/mpg123.c:35
 msgid "Rock"
 msgstr "Rock"
 
-#: Input/mpg123/mpg123.c:36
+#: Input/mpg123/mpg123.c:35
 msgid "Techno"
 msgstr "Techno"
 
-#: Input/mpg123/mpg123.c:36
+#: Input/mpg123/mpg123.c:35
 msgid "Industrial"
 msgstr "Industrial"
 
-#: Input/mpg123/mpg123.c:36
+#: Input/mpg123/mpg123.c:35
 msgid "Alternative"
 msgstr "Alternative"
 
-#: Input/mpg123/mpg123.c:37
+#: Input/mpg123/mpg123.c:36
 msgid "Ska"
 msgstr "Ska"
 
-#: Input/mpg123/mpg123.c:37
+#: Input/mpg123/mpg123.c:36
 msgid "Death Metal"
 msgstr "Death Metal"
 
-#: Input/mpg123/mpg123.c:37
+#: Input/mpg123/mpg123.c:36
 msgid "Pranks"
 msgstr "Pranks"
 
-#: Input/mpg123/mpg123.c:37
+#: Input/mpg123/mpg123.c:36
 msgid "Soundtrack"
 msgstr "Soundtrack"
 
-#: Input/mpg123/mpg123.c:38
+#: Input/mpg123/mpg123.c:37
 msgid "Euro-Techno"
 msgstr "Euro-Techno"
 
-#: Input/mpg123/mpg123.c:38
+#: Input/mpg123/mpg123.c:37
 msgid "Ambient"
 msgstr "Ambient"
 
-#: Input/mpg123/mpg123.c:38
+#: Input/mpg123/mpg123.c:37
 msgid "Trip-Hop"
 msgstr "Trip-Hop"
 
-#: Input/mpg123/mpg123.c:38
+#: Input/mpg123/mpg123.c:37
 msgid "Vocal"
 msgstr "Vocal"
 
-#: Input/mpg123/mpg123.c:39
+#: Input/mpg123/mpg123.c:38
 msgid "Jazz+Funk"
 msgstr "Jazz+Funk"
 
-#: Input/mpg123/mpg123.c:39
+#: Input/mpg123/mpg123.c:38
 msgid "Fusion"
 msgstr "Fusion"
 
-#: Input/mpg123/mpg123.c:39
+#: Input/mpg123/mpg123.c:38
 msgid "Trance"
 msgstr "Trance"
 
-#: Input/mpg123/mpg123.c:39
+#: Input/mpg123/mpg123.c:38
 msgid "Classical"
 msgstr "Classical"
 
-#: Input/mpg123/mpg123.c:40
+#: Input/mpg123/mpg123.c:39
 msgid "Instrumental"
 msgstr "Instrumental"
 
-#: Input/mpg123/mpg123.c:40
+#: Input/mpg123/mpg123.c:39
 msgid "Acid"
 msgstr "Acid"
 
-#: Input/mpg123/mpg123.c:40
+#: Input/mpg123/mpg123.c:39
 msgid "House"
 msgstr "House"
 
-#: Input/mpg123/mpg123.c:40
+#: Input/mpg123/mpg123.c:39
 msgid "Game"
 msgstr "Game"
 
-#: Input/mpg123/mpg123.c:41
+#: Input/mpg123/mpg123.c:40
 msgid "Sound Clip"
 msgstr "Sound Clip"
 
-#: Input/mpg123/mpg123.c:41
+#: Input/mpg123/mpg123.c:40
 msgid "Gospel"
 msgstr "Gospel"
 
-#: Input/mpg123/mpg123.c:41
+#: Input/mpg123/mpg123.c:40
 msgid "Noise"
 msgstr "Noise"
 
-#: Input/mpg123/mpg123.c:41
+#: Input/mpg123/mpg123.c:40
 msgid "Alt"
 msgstr "Alt"
 
-#: Input/mpg123/mpg123.c:42
+#: Input/mpg123/mpg123.c:41
 msgid "Bass"
 msgstr "Bass"
 
-#: Input/mpg123/mpg123.c:42
+#: Input/mpg123/mpg123.c:41
 msgid "Soul"
 msgstr "Soul"
 
-#: Input/mpg123/mpg123.c:42
+#: Input/mpg123/mpg123.c:41
 msgid "Punk"
 msgstr "Punk"
 
-#: Input/mpg123/mpg123.c:42
+#: Input/mpg123/mpg123.c:41
 msgid "Space"
 msgstr "Space"
 
-#: Input/mpg123/mpg123.c:43
+#: Input/mpg123/mpg123.c:42
 msgid "Meditative"
 msgstr "Meditative"
 
-#: Input/mpg123/mpg123.c:43
+#: Input/mpg123/mpg123.c:42
 msgid "Instrumental Pop"
 msgstr "Instrumental Pop"
 
-#: Input/mpg123/mpg123.c:44
+#: Input/mpg123/mpg123.c:43
 msgid "Instrumental Rock"
 msgstr "Instrumental Rock"
 
-#: Input/mpg123/mpg123.c:44
+#: Input/mpg123/mpg123.c:43
 msgid "Ethnic"
 msgstr "Ethnic"
 
-#: Input/mpg123/mpg123.c:44
+#: Input/mpg123/mpg123.c:43
 msgid "Gothic"
 msgstr "Gothic"
 
-#: Input/mpg123/mpg123.c:45
+#: Input/mpg123/mpg123.c:44
 msgid "Darkwave"
 msgstr "Darkwave"
 
-#: Input/mpg123/mpg123.c:45
+#: Input/mpg123/mpg123.c:44
 msgid "Techno-Industrial"
 msgstr "Techno-Industrial"
 
-#: Input/mpg123/mpg123.c:45
+#: Input/mpg123/mpg123.c:44
 msgid "Electronic"
 msgstr "Electronic"
 
-#: Input/mpg123/mpg123.c:46
+#: Input/mpg123/mpg123.c:45
 msgid "Pop-Folk"
 msgstr "Pop-Folk"
 
-#: Input/mpg123/mpg123.c:46
+#: Input/mpg123/mpg123.c:45
 msgid "Eurodance"
 msgstr "Eurodance"
 
-#: Input/mpg123/mpg123.c:46
+#: Input/mpg123/mpg123.c:45
 msgid "Dream"
 msgstr "Dream"
 
-#: Input/mpg123/mpg123.c:47
+#: Input/mpg123/mpg123.c:46
 msgid "Southern Rock"
 msgstr "Southern Rock"
 
-#: Input/mpg123/mpg123.c:47
+#: Input/mpg123/mpg123.c:46
 msgid "Comedy"
 msgstr "Comedy"
 
-#: Input/mpg123/mpg123.c:47
+#: Input/mpg123/mpg123.c:46
 msgid "Cult"
 msgstr "Cult"
 
-#: Input/mpg123/mpg123.c:48
+#: Input/mpg123/mpg123.c:47
 msgid "Gangsta Rap"
 msgstr "Gangsta Rap"
 
-#: Input/mpg123/mpg123.c:48
+#: Input/mpg123/mpg123.c:47
 msgid "Top 40"
 msgstr "Top 40"
 
-#: Input/mpg123/mpg123.c:48
+#: Input/mpg123/mpg123.c:47
 msgid "Christian Rap"
 msgstr "Christian Rap"
 
-#: Input/mpg123/mpg123.c:49
+#: Input/mpg123/mpg123.c:48
 msgid "Pop/Funk"
 msgstr "Pop/Funk"
 
-#: Input/mpg123/mpg123.c:49
+#: Input/mpg123/mpg123.c:48
 msgid "Jungle"
 msgstr "Jungle"
 
-#: Input/mpg123/mpg123.c:49
+#: Input/mpg123/mpg123.c:48
 msgid "Native American"
 msgstr "Native American"
 
-#: Input/mpg123/mpg123.c:50
+#: Input/mpg123/mpg123.c:49
 msgid "Cabaret"
 msgstr "Cabaret"
 
-#: Input/mpg123/mpg123.c:50
+#: Input/mpg123/mpg123.c:49
 msgid "New Wave"
 msgstr "New Wave"
 
-#: Input/mpg123/mpg123.c:50
+#: Input/mpg123/mpg123.c:49
 msgid "Psychedelic"
 msgstr "Psychedelic"
 
-#: Input/mpg123/mpg123.c:50
+#: Input/mpg123/mpg123.c:49
 msgid "Rave"
 msgstr "Rave"
 
-#: Input/mpg123/mpg123.c:51
+#: Input/mpg123/mpg123.c:50
 msgid "Showtunes"
 msgstr "Showtunes"
 
-#: Input/mpg123/mpg123.c:51
+#: Input/mpg123/mpg123.c:50
 msgid "Trailer"
 msgstr "Trailer"
 
-#: Input/mpg123/mpg123.c:51
+#: Input/mpg123/mpg123.c:50
 msgid "Lo-Fi"
 msgstr "Lo-Fi"
 
-#: Input/mpg123/mpg123.c:51
+#: Input/mpg123/mpg123.c:50
 msgid "Tribal"
 msgstr "Tribal"
 
-#: Input/mpg123/mpg123.c:52
+#: Input/mpg123/mpg123.c:51
 msgid "Acid Punk"
 msgstr "Acid Punk"
 
-#: Input/mpg123/mpg123.c:52
+#: Input/mpg123/mpg123.c:51
 msgid "Acid Jazz"
 msgstr "Acid Jazz"
 
-#: Input/mpg123/mpg123.c:52
+#: Input/mpg123/mpg123.c:51
 msgid "Polka"
 msgstr "Polka"
 
-#: Input/mpg123/mpg123.c:52
+#: Input/mpg123/mpg123.c:51
 msgid "Retro"
 msgstr "Retro"
 
-#: Input/mpg123/mpg123.c:53
+#: Input/mpg123/mpg123.c:52
 msgid "Musical"
 msgstr "Musical"
 
-#: Input/mpg123/mpg123.c:53
+#: Input/mpg123/mpg123.c:52
 msgid "Rock & Roll"
 msgstr "Rock & Roll"
 
-#: Input/mpg123/mpg123.c:53
+#: Input/mpg123/mpg123.c:52
 msgid "Hard Rock"
 msgstr "Hard Rock"
 
-#: Input/mpg123/mpg123.c:53
+#: Input/mpg123/mpg123.c:52
 msgid "Folk"
 msgstr "Folk"
 
-#: Input/mpg123/mpg123.c:54
+#: Input/mpg123/mpg123.c:53
 msgid "Folk/Rock"
 msgstr "Folk/Rock"
 
-#: Input/mpg123/mpg123.c:54
+#: Input/mpg123/mpg123.c:53
 msgid "National Folk"
 msgstr "National Folk"
 
-#: Input/mpg123/mpg123.c:54
+#: Input/mpg123/mpg123.c:53
 msgid "Swing"
 msgstr "Swing"
 
-#: Input/mpg123/mpg123.c:55
+#: Input/mpg123/mpg123.c:54
 msgid "Fast-Fusion"
 msgstr "Fast-Fusion"
 
-#: Input/mpg123/mpg123.c:55
+#: Input/mpg123/mpg123.c:54
 msgid "Bebob"
 msgstr "Bebob"
 
-#: Input/mpg123/mpg123.c:55
+#: Input/mpg123/mpg123.c:54
 msgid "Latin"
 msgstr "Latin"
 
-#: Input/mpg123/mpg123.c:55
+#: Input/mpg123/mpg123.c:54
 msgid "Revival"
 msgstr "Revival"
 
-#: Input/mpg123/mpg123.c:56
+#: Input/mpg123/mpg123.c:55
 msgid "Celtic"
 msgstr "Celtic"
 
-#: Input/mpg123/mpg123.c:56
+#: Input/mpg123/mpg123.c:55
 msgid "Bluegrass"
 msgstr "Bluegrass"
 
-#: Input/mpg123/mpg123.c:56
+#: Input/mpg123/mpg123.c:55
 msgid "Avantgarde"
 msgstr "Avantgarde"
 
-#: Input/mpg123/mpg123.c:57
+#: Input/mpg123/mpg123.c:56
 msgid "Gothic Rock"
 msgstr "Gothic Rock"
 
-#: Input/mpg123/mpg123.c:57
+#: Input/mpg123/mpg123.c:56
 msgid "Progressive Rock"
 msgstr "Progressive Rock"
 
-#: Input/mpg123/mpg123.c:58
+#: Input/mpg123/mpg123.c:57
 msgid "Psychedelic Rock"
 msgstr "Psychedelic Rock"
 
-#: Input/mpg123/mpg123.c:58
+#: Input/mpg123/mpg123.c:57
 msgid "Symphonic Rock"
 msgstr "Symphonic Rock"
 
-#: Input/mpg123/mpg123.c:58
+#: Input/mpg123/mpg123.c:57
 msgid "Slow Rock"
 msgstr "Slow Rock"
 
-#: Input/mpg123/mpg123.c:59
+#: Input/mpg123/mpg123.c:58
 msgid "Big Band"
 msgstr "Big Band"
 
-#: Input/mpg123/mpg123.c:59
+#: Input/mpg123/mpg123.c:58
 msgid "Chorus"
 msgstr "Chorus"
 
-#: Input/mpg123/mpg123.c:59
+#: Input/mpg123/mpg123.c:58
 msgid "Easy Listening"
 msgstr "Easy Listening"
 
-#: Input/mpg123/mpg123.c:60
+#: Input/mpg123/mpg123.c:59
 msgid "Acoustic"
 msgstr "Acoustic"
 
-#: Input/mpg123/mpg123.c:60
+#: Input/mpg123/mpg123.c:59
 msgid "Humour"
 msgstr "Humour"
 
-#: Input/mpg123/mpg123.c:60
+#: Input/mpg123/mpg123.c:59
 msgid "Speech"
 msgstr "Speech"
 
-#: Input/mpg123/mpg123.c:60
+#: Input/mpg123/mpg123.c:59
 msgid "Chanson"
 msgstr "Chanson"
 
-#: Input/mpg123/mpg123.c:61
+#: Input/mpg123/mpg123.c:60
 msgid "Opera"
 msgstr "Opera"
 
-#: Input/mpg123/mpg123.c:61
+#: Input/mpg123/mpg123.c:60
 msgid "Chamber Music"
 msgstr "Chamber Music"
 
-#: Input/mpg123/mpg123.c:61
+#: Input/mpg123/mpg123.c:60
 msgid "Sonata"
 msgstr "Sonata"
 
-#: Input/mpg123/mpg123.c:61
+#: Input/mpg123/mpg123.c:60
 msgid "Symphony"
 msgstr "Symphony"
 
-#: Input/mpg123/mpg123.c:62
+#: Input/mpg123/mpg123.c:61
 msgid "Booty Bass"
 msgstr "Booty Bass"
 
-#: Input/mpg123/mpg123.c:62
+#: Input/mpg123/mpg123.c:61
 msgid "Primus"
 msgstr "Primus"
 
-#: Input/mpg123/mpg123.c:62
+#: Input/mpg123/mpg123.c:61
 msgid "Porn Groove"
 msgstr "Porn Groove"
 
-#: Input/mpg123/mpg123.c:63
+#: Input/mpg123/mpg123.c:62
 msgid "Satire"
 msgstr "Satire"
 
-#: Input/mpg123/mpg123.c:63
+#: Input/mpg123/mpg123.c:62
 msgid "Slow Jam"
 msgstr "Slow Jam"
 
-#: Input/mpg123/mpg123.c:63
+#: Input/mpg123/mpg123.c:62
 msgid "Club"
 msgstr "Club"
 
-#: Input/mpg123/mpg123.c:63
+#: Input/mpg123/mpg123.c:62
 msgid "Tango"
 msgstr "Tango"
 
-#: Input/mpg123/mpg123.c:64
+#: Input/mpg123/mpg123.c:63
 msgid "Samba"
 msgstr "Samba"
 
-#: Input/mpg123/mpg123.c:64
+#: Input/mpg123/mpg123.c:63
 msgid "Folklore"
 msgstr "Folklore"
 
-#: Input/mpg123/mpg123.c:64
+#: Input/mpg123/mpg123.c:63
 msgid "Ballad"
 msgstr "Ballad"
 
-#: Input/mpg123/mpg123.c:64
+#: Input/mpg123/mpg123.c:63
 msgid "Power Ballad"
 msgstr "Power Ballad"
 
-#: Input/mpg123/mpg123.c:65
+#: Input/mpg123/mpg123.c:64
 msgid "Rhythmic Soul"
 msgstr "Rhythmic Soul"
 
-#: Input/mpg123/mpg123.c:65
+#: Input/mpg123/mpg123.c:64
 msgid "Freestyle"
 msgstr "Freestyle"
 
-#: Input/mpg123/mpg123.c:65
+#: Input/mpg123/mpg123.c:64
 msgid "Duet"
 msgstr "Duet"
 
-#: Input/mpg123/mpg123.c:66
+#: Input/mpg123/mpg123.c:65
 msgid "Punk Rock"
 msgstr "Punk Rock"
 
-#: Input/mpg123/mpg123.c:66
+#: Input/mpg123/mpg123.c:65
 msgid "Drum Solo"
 msgstr "Drum Solo"
 
-#: Input/mpg123/mpg123.c:66
+#: Input/mpg123/mpg123.c:65
 msgid "A Cappella"
 msgstr "A Cappella"
 
-#: Input/mpg123/mpg123.c:67
+#: Input/mpg123/mpg123.c:66
 msgid "Euro-House"
 msgstr "Euro-House"
 
-#: Input/mpg123/mpg123.c:67
+#: Input/mpg123/mpg123.c:66
 msgid "Dance Hall"
 msgstr "Dance Hall"
 
-#: Input/mpg123/mpg123.c:67
+#: Input/mpg123/mpg123.c:66
 msgid "Goa"
 msgstr "Goa"
 
-#: Input/mpg123/mpg123.c:68
+#: Input/mpg123/mpg123.c:67
 msgid "Drum & Bass"
 msgstr "Drum & Bass"
 
-#: Input/mpg123/mpg123.c:68
+#: Input/mpg123/mpg123.c:67
 msgid "Club-House"
 msgstr "Club-House"
 
-#: Input/mpg123/mpg123.c:68
+#: Input/mpg123/mpg123.c:67
 msgid "Hardcore"
 msgstr "Hardcore"
 
-#: Input/mpg123/mpg123.c:69
+#: Input/mpg123/mpg123.c:68
 msgid "Terror"
 msgstr "Terror"
 
-#: Input/mpg123/mpg123.c:69
+#: Input/mpg123/mpg123.c:68
 msgid "Indie"
 msgstr "Indie"
 
-#: Input/mpg123/mpg123.c:69
+#: Input/mpg123/mpg123.c:68
 msgid "BritPop"
 msgstr "BritPop"
 
-#: Input/mpg123/mpg123.c:69
+#: Input/mpg123/mpg123.c:68
 msgid "Negerpunk"
 msgstr "Negerpunk"
 
-#: Input/mpg123/mpg123.c:70
+#: Input/mpg123/mpg123.c:69
 msgid "Polsk Punk"
 msgstr "Polsk Punk"
 
-#: Input/mpg123/mpg123.c:70
+#: Input/mpg123/mpg123.c:69
 msgid "Beat"
 msgstr "Beat"
 
-#: Input/mpg123/mpg123.c:70
+#: Input/mpg123/mpg123.c:69
 msgid "Christian Gangsta Rap"
 msgstr "Christian Gangsta Rap"
 
-#: Input/mpg123/mpg123.c:71
+#: Input/mpg123/mpg123.c:70
 msgid "Heavy Metal"
 msgstr "Heavy Metal"
 
-#: Input/mpg123/mpg123.c:71
+#: Input/mpg123/mpg123.c:70
 msgid "Black Metal"
 msgstr "Black Metal"
 
-#: Input/mpg123/mpg123.c:71
+#: Input/mpg123/mpg123.c:70
 msgid "Crossover"
 msgstr "Crossover"
 
-#: Input/mpg123/mpg123.c:72
+#: Input/mpg123/mpg123.c:71
 msgid "Contemporary Christian"
 msgstr "Contemporary Christian"
 
-#: Input/mpg123/mpg123.c:72
+#: Input/mpg123/mpg123.c:71
 msgid "Christian Rock"
 msgstr "Christian Rock"
 
-#: Input/mpg123/mpg123.c:73
+#: Input/mpg123/mpg123.c:72
 msgid "Merengue"
 msgstr "Merengue"
 
-#: Input/mpg123/mpg123.c:73
+#: Input/mpg123/mpg123.c:72
 msgid "Salsa"
 msgstr "Salsa"
 
-#: Input/mpg123/mpg123.c:73
+#: Input/mpg123/mpg123.c:72
 msgid "Thrash Metal"
 msgstr "Thrash Metal"
 
-#: Input/mpg123/mpg123.c:74
+#: Input/mpg123/mpg123.c:73
 msgid "Anime"
 msgstr "Anime"
 
-#: Input/mpg123/mpg123.c:74
+#: Input/mpg123/mpg123.c:73
 msgid "JPop"
 msgstr "JPop"
 
-#: Input/mpg123/mpg123.c:74
+#: Input/mpg123/mpg123.c:73
 msgid "Synthpop"
 msgstr "Synthpop"
 
-#: Input/mpg123/mpg123.c:1173
+#: Input/mpg123/mpg123.c:1165
 #, c-format
 msgid "MPEG Layer 1/2/3 Player %s"
 msgstr "MPEG Layer 1/2/3 プレイヤー %s"
@@ -1126,8 +1126,8 @@
 msgstr "FPUデコーダ"
 
 #: Input/mikmod/plugin.c:567 Input/mpg123/configure.c:471
-#: xmms/equalizer.c:1454 xmms/equalizer.c:1490 xmms/prefswin.c:767
-#: xmms/prefswin.c:857 xmms/prefswin.c:864
+#: xmms/equalizer.c:1454 xmms/equalizer.c:1490 xmms/prefswin.c:755
+#: xmms/prefswin.c:845 xmms/prefswin.c:852
 msgid "Options"
 msgstr "オプション"
 
@@ -1201,7 +1201,7 @@
 msgstr "パス:"
 
 #: Input/mpg123/configure.c:638 Output/disk_writer/disk_writer.c:360
-#: xmms/prefswin.c:883 xmms/prefswin.c:903
+#: xmms/prefswin.c:871 xmms/prefswin.c:891
 msgid "Browse"
 msgstr "ブラウズ"
 
@@ -1267,120 +1267,110 @@
 msgid "Title"
 msgstr "タイトル"
 
-#: Input/mpg123/fileinfo.c:107 Input/mpg123/fileinfo.c:113
-#: Input/mpg123/fileinfo.c:146 Input/mpg123/fileinfo.c:151
-#: Input/mpg123/fileinfo.c:156
+#: Input/mpg123/fileinfo.c:102 Input/mpg123/fileinfo.c:108
+#: Input/mpg123/fileinfo.c:126 Input/mpg123/fileinfo.c:131
+#: Input/mpg123/fileinfo.c:136
 msgid "File Info"
 msgstr "ファイル情報"
 
-#: Input/mpg123/fileinfo.c:107 Input/mpg123/fileinfo.c:113
+#: Input/mpg123/fileinfo.c:102 Input/mpg123/fileinfo.c:108
 msgid "Couldn't write tag!"
 msgstr "タグが書きこめません!"
 
-#: Input/mpg123/fileinfo.c:147 Input/mpg123/fileinfo.c:156
+#: Input/mpg123/fileinfo.c:127 Input/mpg123/fileinfo.c:136
 msgid "Couldn't remove tag!"
 msgstr "タグを削除できません!"
 
-#: Input/mpg123/fileinfo.c:151
+#: Input/mpg123/fileinfo.c:131
 msgid "No tag to remove!"
 msgstr "削除するタグがありません!"
 
-#: Input/mikmod/plugin.c:466 Input/mpg123/fileinfo.c:172
+#: Input/mpg123/fileinfo.c:147
+msgid "None"
+msgstr "なし"
+
+#: Input/mpg123/fileinfo.c:147
+msgid "50/15 ms"
+msgstr "50/15 ms"
+
+#: Input/mpg123/fileinfo.c:148
+msgid "CCIT J.17"
+msgstr "CCIT J.17"
+
+#: Input/mikmod/plugin.c:466 Input/mpg123/fileinfo.c:149
 msgid "Stereo"
 msgstr "ステレオ"
 
-#: Input/mpg123/fileinfo.c:172
+#: Input/mpg123/fileinfo.c:149
 msgid "Joint stereo"
 msgstr "ジョイントステレオ"
 
-#: Input/mpg123/fileinfo.c:173
+#: Input/mpg123/fileinfo.c:150
 msgid "Dual channel"
 msgstr "デュアルチャネル"
 
-#: Input/mpg123/fileinfo.c:173
+#: Input/mpg123/fileinfo.c:150
 msgid "Single channel"
 msgstr "シングルチャネル"
 
-#: Input/mpg123/fileinfo.c:186 Input/mpg123/fileinfo.c:462
-#, c-format
-msgid "Bitrate: %d kb/s"
-msgstr "ビットレート: %d kb/s"
-
-#: Input/mpg123/fileinfo.c:187 Input/mpg123/fileinfo.c:464
-#, c-format
-msgid "Samplerate: %ld Hz"
-msgstr "サンプルレート: %ld Hz"
-
-#: Input/mpg123/fileinfo.c:198
-msgid "None"
-msgstr "なし"
-
-#: Input/mpg123/fileinfo.c:198
-msgid "50/15 ms"
-msgstr "50/15 ms"
-
-#: Input/mpg123/fileinfo.c:199
-msgid "CCIT J.17"
-msgstr "CCIT J.17"
-
-#: Input/mpg123/fileinfo.c:200
+#: Input/mpg123/fileinfo.c:151
 msgid "No"
 msgstr "いいえ"
 
-#: Input/mpg123/fileinfo.c:200
+#: Input/mpg123/fileinfo.c:151
 msgid "Yes"
 msgstr "はい"
 
-#: Input/mpg123/fileinfo.c:231
+#: Input/mpg123/fileinfo.c:187
 msgid "Filename:"
 msgstr "ファイル名:"
 
-#: Input/mpg123/fileinfo.c:243
+#: Input/mpg123/fileinfo.c:199
 msgid "ID3 Tag:"
 msgstr "ID3 Tag:"
 
-#: Input/mpg123/fileinfo.c:250
+#: Input/mpg123/fileinfo.c:206
 msgid "Title:"
 msgstr "タイトル:"
 
-#: Input/mpg123/fileinfo.c:257
+#: Input/mpg123/fileinfo.c:213
 msgid "Artist:"
 msgstr "アーティスト:"
 
-#: Input/mpg123/fileinfo.c:264
+#: Input/mpg123/fileinfo.c:220
 msgid "Album:"
 msgstr "アルバム:"
 
-#: Input/mpg123/fileinfo.c:271
+#: Input/mpg123/fileinfo.c:227
 msgid "Comment:"
 msgstr "コメント:"
 
-#: Input/mpg123/fileinfo.c:278
+#: Input/mpg123/fileinfo.c:234
 msgid "Year:"
 msgstr "年:"
 
-#: Input/mpg123/fileinfo.c:286
+#: Input/mpg123/fileinfo.c:242
 msgid "Genre:"
 msgstr "ジャンル:"
 
-#: Input/mpg123/fileinfo.c:308
+#: Input/mpg123/fileinfo.c:264
 msgid "Save"
 msgstr "保存"
 
-#: Input/mpg123/fileinfo.c:314
+#: Input/mpg123/fileinfo.c:270
 msgid "Remove ID3"
 msgstr "ID3削除"
 
-#: Input/mpg123/fileinfo.c:324
+#: Input/mpg123/fileinfo.c:280
 msgid "MPEG Info:"
 msgstr "MPEG情報"
 
-#: Input/mpg123/fileinfo.c:363
+#: Input/mpg123/fileinfo.c:319
 #, c-format
 msgid "File Info - %s"
 msgstr "ファイル情報 - %s"
 
-#: Input/mpg123/fileinfo.c:457
+#: Input/mpg123/fileinfo.c:410
 #, c-format
 msgid ""
 "Bitrate: Variable,\n"
@@ -1389,7 +1379,17 @@
 "ビットレート: 可変,\n"
 "平均ビットレート: %d kb/s"
 
-#: Input/mpg123/fileinfo.c:465
+#: Input/mpg123/fileinfo.c:415
+#, c-format
+msgid "Bitrate: %d kb/s"
+msgstr "ビットレート: %d kb/s"
+
+#: Input/mpg123/fileinfo.c:418
+#, c-format
+msgid "Samplerate: %ld Hz"
+msgstr "サンプルレート: %ld Hz"
+
+#: Input/mpg123/fileinfo.c:420
 #, c-format
 msgid ""
 "%s\n"
@@ -1404,7 +1404,7 @@
 "オリジナル: %s\n"
 "強調: %s"
 
-#: Input/mpg123/fileinfo.c:466
+#: Input/mpg123/fileinfo.c:422
 #, c-format
 msgid ""
 "%d frames\n"
@@ -1413,35 +1413,35 @@
 "%d フレーム\n"
 "ファイルサイズ: %lu バイト"
 
-#: Input/mpg123/http.c:207 Output/disk_writer/disk_writer.c:127
+#: Input/mpg123/http.c:208 Output/disk_writer/disk_writer.c:127
 msgid "Error"
 msgstr "エラー"
 
-#: Input/mpg123/http.c:359
+#: Input/mpg123/http.c:360
 #, c-format
 msgid "LOOKING UP %s"
 msgstr "%s を探しています"
 
-#: Input/mpg123/http.c:365
+#: Input/mpg123/http.c:366
 #, c-format
 msgid "Couldn't look up host %s"
 msgstr "%s が見つかりませんでした"
 
-#: Input/mpg123/http.c:378
+#: Input/mpg123/http.c:379
 #, c-format
 msgid "CONNECTING TO %s:%d"
 msgstr "%s:%d に接続中"
 
-#: Input/mpg123/http.c:385 Input/mpg123/http.c:405
+#: Input/mpg123/http.c:386 Input/mpg123/http.c:406
 #, c-format
 msgid "Couldn't connect to host %s"
 msgstr "%s に接続できませんでした"
 
-#: Input/mpg123/http.c:463
+#: Input/mpg123/http.c:464
 msgid "CONNECTED: WAITING FOR REPLY"
 msgstr "接続完了: 応答を待っています"
 
-#: Input/mpg123/http.c:504
+#: Input/mpg123/http.c:505
 #, c-format
 msgid ""
 "Couldn't connect to host %s\n"
@@ -1450,13 +1450,13 @@
 "%s に接続できませんでした\n"
 "サーバは %s と応答してきました"
 
-#: Input/mpg123/http.c:622
+#: Input/mpg123/http.c:623
 #, c-format
 msgid "PRE-BUFFERING: %dKB/%dKB"
 msgstr "PRE-BUFFERING: %dKB/%dKB"
 
 #. mpg123_ip.set_info(title, -1, mpg123_bitrate * 1000, mpg123_frequency, mpg123_stereo);
-#: Input/mpg123/http.c:804
+#: Input/mpg123/http.c:805
 msgid "Message"
 msgstr "メッセージ"
 
@@ -1862,12 +1862,12 @@
 msgid "Disk Writer Configuration"
 msgstr "ディスクライターの設定"
 
-#: Visualization/blur_scope/blur_scope.c:62
+#: Visualization/blur_scope/blur_scope.c:61
 #, c-format
 msgid "Blur Scope %s"
 msgstr "ブラースコープ %s"
 
-#: Visualization/blur_scope/blur_scope.c:157
+#: Visualization/blur_scope/blur_scope.c:156
 msgid "Blur scope"
 msgstr "ブラースコープ"
 
@@ -2046,61 +2046,61 @@
 #. * Change the Cancel buttons caption to Close.
 #.
 #: xmms/about.c:181 xmms/equalizer.c:1308 xmms/equalizer.c:1312
-#: xmms/main.c:1642 xmms/skinwin.c:87 xmms/util.c:725
+#: xmms/main.c:1644 xmms/skinwin.c:87 xmms/util.c:725
 msgid "Close"
 msgstr "閉じる"
 
-#: xmms/controlsocket.c:483 xmms/main.c:128 xmms/main.c:1836 xmms/main.c:2144
-#: xmms/main.c:2145 xmms/main.c:2532
+#: xmms/controlsocket.c:483 xmms/main.c:128 xmms/main.c:1838 xmms/main.c:2146
+#: xmms/main.c:2147 xmms/main.c:2534
 msgid "/Repeat"
 msgstr "/繰り返し"
 
-#: xmms/controlsocket.c:487 xmms/main.c:129 xmms/main.c:1830 xmms/main.c:2140
-#: xmms/main.c:2141 xmms/main.c:2531
+#: xmms/controlsocket.c:487 xmms/main.c:129 xmms/main.c:1832 xmms/main.c:2142
+#: xmms/main.c:2143 xmms/main.c:2533
 msgid "/Shuffle"
 msgstr "/シャッフル"
 
-#: xmms/eq_slider.c:61
+#: xmms/eq_slider.c:82
 msgid "PREAMP"
 msgstr "PREAMP"
 
-#: xmms/eq_slider.c:61
+#: xmms/eq_slider.c:82
 msgid "60HZ"
 msgstr "60HZ"
 
-#: xmms/eq_slider.c:61
+#: xmms/eq_slider.c:82
 msgid "170HZ"
 msgstr "170HZ"
 
-#: xmms/eq_slider.c:62
+#: xmms/eq_slider.c:83
 msgid "310HZ"
 msgstr "310HZ"
 
-#: xmms/eq_slider.c:62
+#: xmms/eq_slider.c:83
 msgid "600HZ"
 msgstr "600HZ"
 
-#: xmms/eq_slider.c:62
+#: xmms/eq_slider.c:83
 msgid "1KHZ"
 msgstr "1KHZ"
 
-#: xmms/eq_slider.c:63
+#: xmms/eq_slider.c:84
 msgid "3KHZ"
 msgstr "3KHZ"
 
-#: xmms/eq_slider.c:63
+#: xmms/eq_slider.c:84
 msgid "6KHZ"
 msgstr "6KHZ"
 
-#: xmms/eq_slider.c:63
+#: xmms/eq_slider.c:84
 msgid "12KHZ"
 msgstr "12KHZ"
 
-#: xmms/eq_slider.c:64
+#: xmms/eq_slider.c:85
 msgid "14KHZ"
 msgstr "14KHZ"
 
-#: xmms/eq_slider.c:64
+#: xmms/eq_slider.c:85
 msgid "16KHZ"
 msgstr "16KHZ"
 
@@ -2118,50 +2118,50 @@
 
 #. "<control>3"
 #: xmms/main.c:127 xmms/main.c:131 xmms/main.c:134 xmms/main.c:262
-#: xmms/main.c:267 xmms/main.c:271 xmms/main.c:290 xmms/playlistwin.c:91
+#: xmms/main.c:267 xmms/main.c:271 xmms/main.c:290 xmms/playlistwin.c:94
 msgid "/-"
 msgstr "/-"
 
-#: xmms/main.c:130 xmms/main.c:2182 xmms/main.c:2534
+#: xmms/main.c:130 xmms/main.c:2184 xmms/main.c:2536
 msgid "/No Playlist Advance"
 msgstr "/自動的に次の曲にすすまない"
 
-#: xmms/main.c:132 xmms/main.c:133 xmms/main.c:2537 xmms/main.c:2542
-#: xmms/main.c:2722 xmms/main.c:2727
+#: xmms/main.c:132 xmms/main.c:133 xmms/main.c:2539 xmms/main.c:2544
+#: xmms/main.c:2723 xmms/main.c:2728
 msgid "/Time Elapsed"
 msgstr "/経過時間で表示"
 
-#: xmms/main.c:133 xmms/main.c:2538 xmms/main.c:2543 xmms/main.c:2723
-#: xmms/main.c:2728
+#: xmms/main.c:133 xmms/main.c:2540 xmms/main.c:2545 xmms/main.c:2724
+#: xmms/main.c:2729
 msgid "/Time Remaining"
 msgstr "/残り時間で表示"
 
-#: xmms/main.c:135 xmms/main.c:2154 xmms/main.c:2376 xmms/main.c:2546
+#: xmms/main.c:135 xmms/main.c:2156 xmms/main.c:2378 xmms/main.c:2548
 msgid "/Always On Top"
 msgstr "/常に最前面に"
 
-#: xmms/main.c:136 xmms/main.c:2160 xmms/main.c:2547
+#: xmms/main.c:136 xmms/main.c:2162 xmms/main.c:2549
 msgid "/Sticky"
 msgstr "/粘着(Sticky)"
 
-#: xmms/main.c:137 xmms/main.c:692 xmms/main.c:2164 xmms/main.c:2549
+#: xmms/main.c:137 xmms/main.c:694 xmms/main.c:2166 xmms/main.c:2551
 msgid "/WindowShade Mode"
 msgstr "/WindowShade モード"
 
-#: xmms/main.c:138 xmms/main.c:2167 xmms/main.c:2550 xmms/playlistwin.c:308
+#: xmms/main.c:138 xmms/main.c:2169 xmms/main.c:2552 xmms/playlistwin.c:312
 msgid "/Playlist WindowShade Mode"
 msgstr "/Playlist WindowShade モード"
 
-#: xmms/equalizer.c:156 xmms/equalizer.c:325 xmms/main.c:139 xmms/main.c:2170
-#: xmms/main.c:2551
+#: xmms/equalizer.c:156 xmms/equalizer.c:325 xmms/main.c:139 xmms/main.c:2172
+#: xmms/main.c:2553
 msgid "/Equalizer WindowShade Mode"
 msgstr "/Equalizer WindowShade モード"
 
-#: xmms/main.c:140 xmms/main.c:2173 xmms/main.c:2383 xmms/main.c:2548
+#: xmms/main.c:140 xmms/main.c:2175 xmms/main.c:2385 xmms/main.c:2550
 msgid "/DoubleSize"
 msgstr "/ダブルサイズ"
 
-#: xmms/main.c:141 xmms/main.c:2179 xmms/main.c:2533
+#: xmms/main.c:141 xmms/main.c:2181 xmms/main.c:2535
 msgid "/Easy Move"
 msgstr "/簡単移動(Easy Move)"
 
@@ -2177,7 +2177,7 @@
 msgid "/Jump To Time"
 msgstr "/時間を指定して飛ぶ"
 
-#: xmms/main.c:158 xmms/main.c:2120 xmms/main.c:2564
+#: xmms/main.c:158 xmms/main.c:2122 xmms/main.c:2566
 msgid "/Autoscroll Songname"
 msgstr "/曲名の自動スクロール"
 
@@ -2351,20 +2351,20 @@
 msgid "/View File Info"
 msgstr "/ファイル情報を見る"
 
-#: xmms/main.c:268 xmms/main.c:2263 xmms/main.c:2610
+#: xmms/main.c:268 xmms/main.c:2265 xmms/main.c:2612
 msgid "/Main Window"
 msgstr "/メインウィンドウ"
 
-#: xmms/main.c:269 xmms/main.c:2269 xmms/main.c:2611 xmms/playlistwin.c:1517
-#: xmms/playlistwin.c:1530
+#: xmms/main.c:269 xmms/main.c:2271 xmms/main.c:2613 xmms/playlistwin.c:1518
+#: xmms/playlistwin.c:1531
 msgid "/Playlist Editor"
 msgstr "/プレイリスト"
 
-#: xmms/equalizer.c:693 xmms/main.c:270 xmms/main.c:2275
+#: xmms/equalizer.c:693 xmms/main.c:270 xmms/main.c:2277
 msgid "/Graphical EQ"
 msgstr "/グラフィックイコライザ"
 
-#: xmms/main.c:272 xmms/main.c:2612
+#: xmms/main.c:272 xmms/main.c:2614
 msgid "/Options"
 msgstr "/オプション"
 
@@ -2425,7 +2425,7 @@
 msgid "/Playback/Jump to File"
 msgstr "/プレイバック/ファイルを指定"
 
-#: xmms/main.c:289 xmms/main.c:2613
+#: xmms/main.c:289 xmms/main.c:2615
 msgid "/Visualization"
 msgstr "/視覚化"
 
@@ -2433,108 +2433,103 @@
 msgid "/Exit"
 msgstr "/終了"
 
-#: xmms/main.c:1301
+#: xmms/main.c:1303
 msgid "Jump to time"
 msgstr "時間を指定"
 
-#: xmms/main.c:1311
+#: xmms/main.c:1313
 msgid "Jump to:"
 msgstr "飛先:"
 
-#: xmms/main.c:1327
+#: xmms/main.c:1329
 msgid "minutes:seconds"
 msgstr "分:秒"
 
-#: xmms/main.c:1334
+#: xmms/main.c:1336
 msgid "Track length:"
 msgstr "トラック長:"
 
-#: xmms/main.c:1348 xmms/main.c:1635
+#: xmms/main.c:1350 xmms/main.c:1637
 msgid "Jump"
 msgstr "飛ぶ"
 
-#: xmms/main.c:1570
+#: xmms/main.c:1572
 msgid "Files"
 msgstr "ファイル"
 
-#: xmms/main.c:1585
+#: xmms/main.c:1587
 msgid "Jump to file"
 msgstr "ファイルを指定"
 
-#: xmms/main.c:1607
-#, fuzzy
-msgid "Search: "
-msgstr "年:"
-
-#: xmms/main.c:1750 xmms/playlistwin.c:571
+#: xmms/main.c:1752 xmms/playlistwin.c:575
 msgid "Select directory to add:"
 msgstr "追加するディレクトリを選択:"
 
-#: xmms/main.c:1791
+#: xmms/main.c:1793
 msgid "Enter location to play:"
 msgstr "再生するURLを入力してください。"
 
-#: xmms/main.c:1900
+#: xmms/main.c:1902
 msgid "SEEK TO: %d:%-2.2d/%d:%-2.2d (%d%%)"
 msgstr "SEEK TO: %d:%-2.2d/%d:%-2.2d (%d%%)"
 
-#: xmms/main.c:1925 xmms/main.c:2461
+#: xmms/main.c:1927 xmms/main.c:2463
 msgid "VOLUME: %d%%"
 msgstr "音量: %d%%"
 
-#: xmms/main.c:1954 xmms/main.c:2466
+#: xmms/main.c:1956 xmms/main.c:2468
 msgid "BALANCE: %d%% LEFT"
 msgstr "バランス: %d%% 左"
 
-#: xmms/main.c:1959 xmms/main.c:2469
+#: xmms/main.c:1961 xmms/main.c:2471
 msgid "BALANCE: CENTER"
 msgstr "バランス: 中央"
 
-#: xmms/main.c:1964 xmms/main.c:2472
+#: xmms/main.c:1966 xmms/main.c:2474
 msgid "BALANCE: %d%% RIGHT"
 msgstr "バランス: %d%% 右"
 
-#: xmms/main.c:2334
+#: xmms/main.c:2336
 msgid "OPTIONS MENU"
 msgstr "オプションメニュー"
 
-#: xmms/main.c:2340
+#: xmms/main.c:2342
 msgid "DISABLE ALWAYS ON TOP (N/A)"
 msgstr "常に最前面に表示するのを禁止 (使用不可)"
 
-#: xmms/main.c:2342
+#: xmms/main.c:2344
 msgid "ENABLE ALWAYS ON TOP (N/A)"
 msgstr "常に最前面に表示する (使用不可)"
 
-#: xmms/main.c:2345
+#: xmms/main.c:2347
 msgid "DISABLE ALWAYS ON TOP"
 msgstr "常に最前面に表示するのを禁止"
 
-#: xmms/main.c:2347
+#: xmms/main.c:2349
 msgid "ENABLE ALWAYS ON TOP"
 msgstr "常に最前面に表示"
 
-#: xmms/main.c:2350
+#: xmms/main.c:2352
 msgid "FILE INFO BOX"
 msgstr "ファイル情報"
 
-#: xmms/main.c:2354
+#: xmms/main.c:2356
 msgid "DISABLE DOUBLESIZE"
 msgstr "ダブルサイズ解除"
 
-#: xmms/main.c:2356
+#: xmms/main.c:2358
 msgid "ENABLE DOUBLESIZE"
 msgstr "ダブルサイズ"
 
-#: xmms/main.c:2359
+#: xmms/main.c:2361
 msgid "VISUALIZATION MENU"
 msgstr "視覚化メニュー"
 
-#: xmms/main.c:2793
+#: xmms/main.c:2794
 msgid "Couldn't open audio"
 msgstr "audioデバイスを開けませんでした"
 
-#: xmms/main.c:2794
+#: xmms/main.c:2795
 msgid ""
 "Please check that:\n"
 "\n"
@@ -2548,7 +2543,7 @@
 "2. 他のプログラムがサウンドカードを使っていないか\n"
 "3. サウンドカードがちゃんと設定されているか"
 
-#: xmms/main.c:2950
+#: xmms/main.c:2951
 msgid ""
 "\n"
 "Usage: xmms [options] [files] ...\n"
@@ -2586,7 +2581,7 @@
 "-v, --version           バージョンを表示して終了。\n"
 "\n"
 
-#: xmms/main.c:3111
+#: xmms/main.c:3112
 msgid ""
 "\n"
 "Segmentation fault\n"
@@ -2601,7 +2596,7 @@
 "あなたはXMMSのバグを見つけたようです。\n"
 "http://www.xmms.org/bugs を開いてバグレポートを送ってください。\n"
 
-#: xmms/main.c:3249
+#: xmms/main.c:3250
 msgid ""
 "Sorry, threads isn't supported on your platform.\n"
 "\n"
@@ -2614,16 +2609,16 @@
 "もし、あなたのシステムがlibc5ベースのLinuxで、LinuxThreadsをいれる前に、\n"
 "GLIBやGTK+をインストールしていたら、再コンパイルする必要があるでしょう。\n"
 
-#: xmms/main.c:3310
+#: xmms/main.c:3311
 #, c-format
 msgid "Sorry, your GTK+ version (%d.%d.%d) doesn't work with XMMS.\n"
 msgstr "残念ですが、GTK+のversionが%d.%d.%dで、XMMSがうまく動きません。\n"
 
-#: xmms/main.c:3311
+#: xmms/main.c:3312
 msgid "Please use GTK+ 1.2.2 or newer (NOTE not 1.3.x)\n"
 msgstr "version 1.2.2より新しいGTK+を使ってください。(1.3.xではないです)\n"
 
-#: xmms/main.c:3323
+#: xmms/main.c:3324
 msgid "XMMS"
 msgstr "XMMS"
 
@@ -2639,7 +2634,7 @@
 msgid "Select random skin on play"
 msgstr "再生する度にスキンをランダムに変更"
 
-#: xmms/skinwin.c:193
+#: xmms/skinwin.c:196
 msgid "(none)"
 msgstr "(なし)"
 
@@ -2693,257 +2688,257 @@
 "\n"
 "警告はしました。DGAを有効にするにはXMMSを再起動してください。"
 
-#: xmms/prefswin.c:408
+#: xmms/prefswin.c:402
 msgid "Select playlist font:"
 msgstr "プレイリストのフォントを選択:"
 
-#: xmms/prefswin.c:436
+#: xmms/prefswin.c:424
 msgid "Select main window font:"
 msgstr "メインウィンドウのフォントを選択:"
 
-#: xmms/prefswin.c:532
+#: xmms/prefswin.c:520
 msgid "Input plugins"
 msgstr "入力プラグイン"
 
-#: xmms/prefswin.c:533
+#: xmms/prefswin.c:521
 msgid "General plugins"
 msgstr "汎用プラグイン"
 
-#: xmms/prefswin.c:534
+#: xmms/prefswin.c:522
 msgid "Visualization plugins"
 msgstr "視覚化プラグイン"
 
-#: xmms/prefswin.c:542
+#: xmms/prefswin.c:530
 msgid "Preferences"
 msgstr "設定"
 
 #.
 #. * Input plugins
 #.
-#: xmms/prefswin.c:564
+#: xmms/prefswin.c:552
 msgid "Input Plugins"
 msgstr "入力プラグイン"
 
-#: xmms/prefswin.c:593 xmms/prefswin.c:625 xmms/prefswin.c:662
-#: xmms/prefswin.c:702 xmms/prefswin.c:748
+#: xmms/prefswin.c:581 xmms/prefswin.c:613 xmms/prefswin.c:650
+#: xmms/prefswin.c:690 xmms/prefswin.c:736
 msgid "Configure"
 msgstr "設定"
 
-#: xmms/prefswin.c:600 xmms/prefswin.c:710 xmms/prefswin.c:756
+#: xmms/prefswin.c:588 xmms/prefswin.c:698 xmms/prefswin.c:744
 msgid "Enable plugin"
 msgstr "プラグインを使用"
 
 #.
 #. * Output plugin
 #.
-#: xmms/prefswin.c:608
+#: xmms/prefswin.c:596
 msgid "Output Plugin"
 msgstr "出力プラグイン"
 
-#: xmms/prefswin.c:633
+#: xmms/prefswin.c:621
 msgid "Audio I/O Plugins"
 msgstr "オーディオ入出力プラグイン"
 
 #.
 #. * Effect plugins
 #.
-#: xmms/prefswin.c:645
+#: xmms/prefswin.c:633
 msgid "Effect Plugins"
 msgstr "効果プラグイン"
 
-#: xmms/prefswin.c:670
+#: xmms/prefswin.c:658
 msgid "Use plugins"
 msgstr "プラグインを使う"
 
 #.
 #. * General plugins
 #.
-#: xmms/prefswin.c:677
+#: xmms/prefswin.c:665
 msgid "General Plugins"
 msgstr "汎用プラグイン"
 
-#: xmms/prefswin.c:714
+#: xmms/prefswin.c:702
 msgid "Effect/General Plugins"
 msgstr "効果/汎用プラグイン"
 
-#: xmms/prefswin.c:722 xmms/prefswin.c:760
+#: xmms/prefswin.c:710 xmms/prefswin.c:748
 msgid "Visualization Plugins"
 msgstr "視覚化プラグイン"
 
-#: xmms/prefswin.c:775
+#: xmms/prefswin.c:763
 msgid "Read info on"
 msgstr "情報を"
 
-#: xmms/prefswin.c:778
+#: xmms/prefswin.c:766
 msgid "demand"
 msgstr "その場で読む"
 
-#: xmms/prefswin.c:781
+#: xmms/prefswin.c:769
 msgid "load"
 msgstr "最初に読む"
 
-#: xmms/prefswin.c:785
+#: xmms/prefswin.c:773
 msgid "Allow multiple instances"
 msgstr "複数のXMMSの起動を許可する"
 
-#: xmms/prefswin.c:788
+#: xmms/prefswin.c:776
 msgid "Reverse file order in fileselector"
 msgstr "ファイルの順番を逆にする"
 
-#: xmms/prefswin.c:790
+#: xmms/prefswin.c:778
 msgid "Always show clutterbar"
 msgstr "clutterbarを常に表示"
 
-#: xmms/prefswin.c:793
+#: xmms/prefswin.c:781
 msgid "Convert %20 to space"
 msgstr "%20をスペースに変換"
 
-#: xmms/prefswin.c:795
+#: xmms/prefswin.c:783
 msgid "Save window positions"
 msgstr "ウィンドウの位置を保存"
 
-#: xmms/prefswin.c:798
+#: xmms/prefswin.c:786
 msgid "Convert underscore to space"
 msgstr "_をスペースに変換"
 
-#: xmms/prefswin.c:800
+#: xmms/prefswin.c:788
 msgid "Show numbers in playlist"
 msgstr "プレイリストに番号を表示"
 
-#: xmms/prefswin.c:803
+#: xmms/prefswin.c:791
 msgid "Dim titlebar when inactive"
 msgstr "アクティブでない時タイトルバーを薄く"
 
-#: xmms/prefswin.c:805
+#: xmms/prefswin.c:793
 msgid "Save playlist position"
 msgstr "プレイリストの位置を保存"
 
-#: xmms/prefswin.c:808
+#: xmms/prefswin.c:796
 msgid "Sort \"Jump to file\" alphabetical"
 msgstr "ファイル指定でのファイル名をアルファベット順に"
 
-#: xmms/prefswin.c:810
+#: xmms/prefswin.c:798
 msgid "Equalizer doublesize linked"
 msgstr "イコライザもダブルサイズに"
 
-#: xmms/prefswin.c:813
+#: xmms/prefswin.c:801
 msgid "Use realtime priority when available"
 msgstr "リアルタイム優先を可能ならば利用"
 
-#: xmms/prefswin.c:818
+#: xmms/prefswin.c:806
 msgid "Snap windows at"
 msgstr "ウィンドウをスナップするまでの間隔"
 
-#: xmms/prefswin.c:823
+#: xmms/prefswin.c:811
 msgid "pixels"
 msgstr "ピクセル"
 
-#: xmms/prefswin.c:828
+#: xmms/prefswin.c:816
 msgid "Pause between songs for"
 msgstr "曲の間の停止時間"
 
 #. I18N: s = seconds
-#: xmms/prefswin.c:834
+#: xmms/prefswin.c:822
 msgid "s"
 msgstr "秒"
 
-#: xmms/prefswin.c:837
+#: xmms/prefswin.c:825
 msgid "Smooth title scroll"
 msgstr "タイトルをスムーズにスクロール"
 
-#: xmms/prefswin.c:840
+#: xmms/prefswin.c:828
 msgid "Use '\\' as a directory delimiter"
 msgstr "'\\'をディレクトリの区切りにする"
 
-#: xmms/prefswin.c:844
+#: xmms/prefswin.c:832
 msgid "Mouse Wheel adjusts Volume by (%)"
 msgstr "ホイールで音量を動かす割合(%)"
 
-#: xmms/prefswin.c:853
+#: xmms/prefswin.c:841
 msgid "Enable DGA access when available"
 msgstr "DGAを可能ならば有効にする"
 
-#: xmms/prefswin.c:870
+#: xmms/prefswin.c:858
 msgid "Use fontsets (Enable for multi-byte charset support)"
 msgstr "フォントセットの使用(マルチバイト文字のサポート)"
 
-#: xmms/prefswin.c:889
+#: xmms/prefswin.c:877
 msgid "Main Window"
 msgstr "メインウィンドウ"
 
-#: xmms/prefswin.c:896
+#: xmms/prefswin.c:884
 msgid "Use X font"
 msgstr "Xのフォントを使う"
 
-#: xmms/prefswin.c:908
+#: xmms/prefswin.c:896
 msgid "Fonts"
 msgstr "フォント"
 
-#: xmms/prefswin.c:1097 xmms/prefswin.c:1127
+#: xmms/prefswin.c:1085 xmms/prefswin.c:1115
 msgid " (enabled)"
 msgstr " (許可)"
 
-#: xmms/prefswin.c:1156
+#: xmms/prefswin.c:1144
 msgid " (disabled)"
 msgstr " (禁止)"
 
-#: xmms/playlistwin.c:83
+#: xmms/playlistwin.c:86
 msgid "/Sort List"
 msgstr "/ソートリスト"
 
-#: xmms/playlistwin.c:84
+#: xmms/playlistwin.c:87
 msgid "/Sort List/By Title"
 msgstr "/ソートリスト/タイトル順"
 
-#: xmms/playlistwin.c:85
+#: xmms/playlistwin.c:88
 msgid "/Sort List/By Filename"
 msgstr "/ソートリスト/ファイル名順"
 
-#: xmms/playlistwin.c:86
+#: xmms/playlistwin.c:89
 msgid "/Sort List/By Path + Filename"
 msgstr "/ソートリスト/パスを含んだファイル名順"
 
-#: xmms/playlistwin.c:87 xmms/playlistwin.c:644
+#: xmms/playlistwin.c:90 xmms/playlistwin.c:648
 msgid "/Sort Selection"
 msgstr "/ソート選択"
 
-#: xmms/playlistwin.c:88 xmms/playlistwin.c:639
+#: xmms/playlistwin.c:91 xmms/playlistwin.c:643
 msgid "/Sort Selection/By Title"
 msgstr "/ソート選択/タイトル順"
 
-#: xmms/playlistwin.c:89 xmms/playlistwin.c:640
+#: xmms/playlistwin.c:92 xmms/playlistwin.c:644
 msgid "/Sort Selection/By Filename"
 msgstr "/ソート選択/ファイル名順"
 
-#: xmms/playlistwin.c:90 xmms/playlistwin.c:641
+#: xmms/playlistwin.c:93 xmms/playlistwin.c:645
 msgid "/Sort Selection/By Path + Filename"
 msgstr "/ソート選択/パスを含んだファイル名順"
 
-#: xmms/playlistwin.c:92
+#: xmms/playlistwin.c:95
 msgid "/Randomize List"
 msgstr "/リストをランダムにかきまぜる"
 
-#: xmms/playlistwin.c:93
+#: xmms/playlistwin.c:96
 msgid "/Reverse List"
 msgstr "/リストを逆順に"
 
-#: xmms/playlistwin.c:105
+#: xmms/playlistwin.c:108
 msgid "/Remove Dead Files"
 msgstr "/既にないファイルをリストから消す"
 
-#: xmms/playlistwin.c:551
+#: xmms/playlistwin.c:555
 msgid "Enter URL to add:"
 msgstr "追加するURLを入力してください:"
 
-#: xmms/playlistwin.c:771
+#: xmms/playlistwin.c:775
 msgid "Save playlist"
 msgstr "プレイリストを保存"
 
-#: xmms/playlistwin.c:786
+#: xmms/playlistwin.c:790
 msgid "Load playlist"
 msgstr "プレイリストを読込"
 
-#: xmms/playlistwin.c:1431
+#: xmms/playlistwin.c:1435
 msgid "XMMS Playlist"
 msgstr "XMMSプレイリスト"
 
diff -Naur xmms-1.2.4/xmms/Makefile.am xmms-1.2.4j-20001128/xmms/Makefile.am
--- xmms-1.2.4/xmms/Makefile.am	Sat Jun 17 20:51:48 2000
+++ xmms-1.2.4j-20001128/xmms/Makefile.am	Tue Nov 28 16:31:34 2000
@@ -55,7 +55,8 @@
 i18n.h \
 getopt.c getopt1.c getopt.h \
 urldecode.c urldecode.h \
-dnd.h
+dnd.h \
+kanji.c kanji.h
 
 EXTRA_DIST= xmms_logo.xpm xmms_mini.xpm xmms.desktop xmms.wmconfig
 
diff -Naur xmms-1.2.4/xmms/Makefile.in xmms-1.2.4j-20001128/xmms/Makefile.in
--- xmms-1.2.4/xmms/Makefile.in	Tue Nov 28 09:55:58 2000
+++ xmms-1.2.4j-20001128/xmms/Makefile.in	Tue Nov 28 16:31:34 2000
@@ -164,7 +166,7 @@
 
 INCLUDES = @GTK_CFLAGS@ @XMMS_DEFINES@ @ARCH_DEFINES@ -I$(top_builddir)/intl
 
-xmms_SOURCES = bmp.c bmp.h skin.c skin.h util.c util.h output.c output.h fft.c fft.h input.c input.h effect.c effect.h general.c general.h visualization.c visualization.h dga.c dga.h fullscreen.c fullscreen.h pluginenum.c pluginenum.h playlist.c playlist.h controlsocket.c controlsocket.h dock.c dock.h widget.c widget.h sbutton.c sbutton.h pbutton.c pbutton.h tbutton.c tbutton.h textbox.c textbox.h menurow.c menurow.h hslider.c hslider.h monostereo.c monostereo.h vis.c vis.h svis.c svis.h number.c number.h playstatus.c playstatus.h playlist_list.c playlist_list.h playlist_slider.c playlist_slider.h playlist_popup.c playlist_popup.h eq_graph.c eq_graph.h eq_slider.c eq_slider.h main.c main.h skinwin.c skinwin.h prefswin.c prefswin.h playlistwin.c playlistwin.h equalizer.c equalizer.h hints.c hints.h about.c about.h sm.c sm.h plugin.h xmms.h i18n.h getopt.c getopt1.c getopt.h urldecode.c urldecode.h dnd.h
+xmms_SOURCES = bmp.c bmp.h skin.c skin.h util.c util.h output.c output.h fft.c fft.h input.c input.h effect.c effect.h general.c general.h visualization.c visualization.h dga.c dga.h fullscreen.c fullscreen.h pluginenum.c pluginenum.h playlist.c playlist.h controlsocket.c controlsocket.h dock.c dock.h widget.c widget.h sbutton.c sbutton.h pbutton.c pbutton.h tbutton.c tbutton.h textbox.c textbox.h menurow.c menurow.h hslider.c hslider.h monostereo.c monostereo.h vis.c vis.h svis.c svis.h number.c number.h playstatus.c playstatus.h playlist_list.c playlist_list.h playlist_slider.c playlist_slider.h playlist_popup.c playlist_popup.h eq_graph.c eq_graph.h eq_slider.c eq_slider.h main.c main.h skinwin.c skinwin.h prefswin.c prefswin.h playlistwin.c playlistwin.h equalizer.c equalizer.h hints.c hints.h about.c about.h sm.c sm.h plugin.h xmms.h i18n.h getopt.c getopt1.c getopt.h urldecode.c urldecode.h dnd.h kanji.c kanji.h
 
 
 EXTRA_DIST = xmms_logo.xpm xmms_mini.xpm xmms.desktop xmms.wmconfig
@@ -186,7 +188,7 @@
 menurow.o hslider.o monostereo.o vis.o svis.o number.o playstatus.o \
 playlist_list.o playlist_slider.o playlist_popup.o eq_graph.o \
 eq_slider.o main.o skinwin.o prefswin.o playlistwin.o equalizer.o \
-hints.o about.o sm.o getopt.o getopt1.o urldecode.o
+hints.o about.o sm.o getopt.o getopt1.o urldecode.o kanji.o
 xmms_DEPENDENCIES =  $(top_builddir)/libxmms/libxmms.la
 CFLAGS = @CFLAGS@
 COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
diff -Naur xmms-1.2.4/xmms/bmp.c xmms-1.2.4j-20001128/xmms/bmp.c
--- xmms-1.2.4/xmms/bmp.c	Sun May 21 04:22:41 2000
+++ xmms-1.2.4j-20001128/xmms/bmp.c	Tue Nov 28 16:31:34 2000
@@ -62,6 +62,7 @@
 static void read_8b_rle(guint8 *input, guint32 compr_size, guint8 *output, guint32 w, guint32 h, RGBQuad palette[]);
 static void read_16b_rgb(guint8 *input, gint input_size, guint8 *output, guint32 w, guint32 h);
 static void read_24b_rgb(guint8 *input, gint input_size, guint8 *output, guint32 w, guint32 h);
+static void read_32b_rgb(guint8 *input, gint input_size, guint8 *output, guint32 w, guint32 h);
 
 
 GdkPixmap *read_bmp(gchar * filename)
@@ -91,7 +92,7 @@
 	}
 	if (strncmp(type, "BM", 2))
 	{
-		g_warning("read_bmp(): Error in BMP file: wrong type");
+		g_warning("read_bmp(): Error in BMP file %s: wrong type", filename);
 		fclose(file);
 		return NULL;
 	}
@@ -127,11 +128,11 @@
 	}
 	else
 	{
-		g_warning("read_bmp(): Error in BMP file: Unknown header size");
+		g_warning("read_bmp(): Error in BMP file %s: Unknown header size", filename);
 		fclose(file);
 		return NULL;
 	}
-	if (bitcount != 24 && bitcount != 16)
+	if (bitcount != 32 && bitcount != 24 && bitcount != 16)
 	{
 		gint ncols, i;
 
@@ -180,8 +181,10 @@
 		read_16b_rgb(buffer, imgsize, data, w, h);
 	else if (bitcount == 24)
 		read_24b_rgb(buffer, imgsize, data, w, h);
+	else if (bitcount == 32)
+		read_32b_rgb(buffer, imgsize, data, w, h);
 	else
-		g_warning("read_bmp(): Unsupported bitdepth: %d", bitcount);
+		g_warning("read_bmp(): Unsupported bitdepth: %s %d", filename, bitcount);
 
 	ret = gdk_pixmap_new(mainwin->window, w, h, gdk_rgb_get_visual()->depth);
 
@@ -515,5 +518,30 @@
 		}
 		output_ptr -= w * 6;
 		input += padding;
+	}
+}
+
+static void read_32b_rgb(guint8 *input, gint input_size, guint8 *output, guint32 w, guint32 h)
+{
+	guint8 *input_end = input + input_size;
+	guint8 *output_ptr = output + ((h - 1) * w * 3);
+	/* gint padding = (4 - ((w * 3) % 4)) & 3; */
+	guint8 r, g, b;
+	guint x, y;
+	
+	for (y = 0; y < h; y++)
+	{
+		for (x = 0; x < w && input < (input_end - 2); x++)
+		{
+			b = *(input++);
+			g = *(input++);
+			r = *(input++);
+			input++;
+			*output_ptr++ = r;
+			*output_ptr++ = g;
+			*output_ptr++ = b;
+		}
+		output_ptr -= w * 6;
+		/* input += padding; */
 	}
 }
diff -Naur xmms-1.2.4/xmms/eq_graph.c xmms-1.2.4j-20001128/xmms/eq_graph.c
--- xmms-1.2.4/xmms/eq_graph.c	Sat Nov 25 04:11:53 2000
+++ xmms-1.2.4j-20001128/xmms/eq_graph.c	Tue Nov 28 16:31:34 2000
@@ -17,6 +17,8 @@
  */
 #include "xmms.h"
 
+extern gboolean equalizerwin_focus;
+
 void init_spline(gfloat * x, gfloat * y, gint n, gfloat * y2)
 {
 	gint i, k;
@@ -81,6 +83,31 @@
 	    init_spline;
 
 	obj = eg->eg_widget.parent;
+
+#ifndef NO_TRANSPARENT_EQ_GRAPH
+	if (equalizerwin_focus) {
+#if 0
+		skin_draw_pixmap(obj, eg->eg_widget.gc, SKIN_EQMAIN,
+				 0, 294, eg->eg_widget.x, eg->eg_widget.y,
+				 eg->eg_widget.width, eg->eg_widget.height);
+#else
+		skin_draw_pixmap(obj, eg->eg_widget.gc, SKIN_EQMAIN,
+				 eg->eg_widget.x, eg->eg_widget.y,
+				 eg->eg_widget.x, eg->eg_widget.y,
+				 eg->eg_widget.width, eg->eg_widget.height);
+#endif
+		skin_draw_pixmap(obj, eg->eg_widget.gc, SKIN_EQMAIN,
+			 	 0, 314, eg->eg_widget.x,
+				 eg->eg_widget.y + 9 + ((cfg.equalizer_preamp * 9) / 20),
+				 eg->eg_widget.width, 1);
+	} else {
+		skin_draw_pixmap(obj, eg->eg_widget.gc, SKIN_EQMAIN,
+				 eg->eg_widget.x, eg->eg_widget.y,
+				 eg->eg_widget.x, eg->eg_widget.y,
+				 eg->eg_widget.width, eg->eg_widget.height);
+		return;
+	}
+#else
 	skin_draw_pixmap(obj, eg->eg_widget.gc, SKIN_EQMAIN,
 			 0, 294, eg->eg_widget.x, eg->eg_widget.y,
 			 eg->eg_widget.width, eg->eg_widget.height);
@@ -88,7 +115,7 @@
 			 0, 314, eg->eg_widget.x,
 			 eg->eg_widget.y + 9 + ((cfg.equalizer_preamp * 9) / 20),
 			 eg->eg_widget.width, 1);
-
+#endif
 	skin_get_eq_spline_colors(&cols);
 
 	__init_spline(x, cfg.equalizer_bands, 10, yf);
diff -Naur xmms-1.2.4/xmms/eq_slider.c xmms-1.2.4j-20001128/xmms/eq_slider.c
--- xmms-1.2.4/xmms/eq_slider.c	Sat Aug  5 23:10:37 2000
+++ xmms-1.2.4j-20001128/xmms/eq_slider.c	Tue Nov 28 16:31:34 2000
@@ -17,6 +17,10 @@
  */
 #include "xmms.h"
 
+#ifndef NO_TRANSPARENT_EQ_SLIDER
+extern gboolean equalizerwin_focus;
+#endif
+
 void eqslider_set_position(EqSlider * es, gfloat pos)
 {
 	es->es_position = 25 - (int) ((pos * 25.0) / 20.0);
@@ -44,6 +48,22 @@
 	src = SKIN_EQMAIN;
 	obj = es->es_widget.parent;
 
+#ifndef NO_TRANSPARENT_EQ_SLIDER
+	skin_draw_pixmap(obj, es->es_widget.gc, src, es->es_widget.x, es->es_widget.y, es->es_widget.x, es->es_widget.y, es->es_widget.width, es->es_widget.height);
+	if (equalizerwin_focus) {
+		GdkColor white, black;
+
+		skin_draw_pixmap(obj, es->es_widget.gc, src, es->es_widget.x + 2, es->es_widget.y + es->es_position + 1, es->es_widget.x + 1, es->es_widget.y + es->es_position, 11, 11);
+		gdk_color_white(gdk_colormap_get_system(), &white);
+		gdk_color_black(gdk_colormap_get_system(), &black);
+		gdk_gc_set_foreground(es->es_widget.gc, &white);
+		gdk_draw_line(obj, es->es_widget.gc, es->es_widget.x +  1, es->es_widget.y + es->es_position, es->es_widget.x + 11, es->es_widget.y + es->es_position);
+		gdk_draw_line(obj, es->es_widget.gc, es->es_widget.x +  1, es->es_widget.y + es->es_position + 10, es->es_widget.x + 1, es->es_widget.y + es->es_position);
+		gdk_gc_set_foreground(es->es_widget.gc, &black);
+		gdk_draw_line(obj, es->es_widget.gc, es->es_widget.x + 11, es->es_widget.y + es->es_position, es->es_widget.x + 11, es->es_widget.y + es->es_position + 10);
+		gdk_draw_line(obj, es->es_widget.gc, es->es_widget.x +  1, es->es_widget.y + es->es_position + 10, es->es_widget.x + 11, es->es_widget.y + es->es_position + 10);
+	}
+#else
 	frame = 27 - ((es->es_position * 27) / 50);
 	if (frame < 14)
 		skin_draw_pixmap(obj, es->es_widget.gc, src, (frame * 15) + 13, 164, es->es_widget.x, es->es_widget.y, es->es_widget.width, es->es_widget.height);
@@ -53,6 +73,7 @@
 		skin_draw_pixmap(obj, es->es_widget.gc, src, 0, 176, es->es_widget.x + 1, es->es_widget.y + es->es_position, 11, 11);
 	else
 		skin_draw_pixmap(obj, es->es_widget.gc, src, 0, 164, es->es_widget.x + 1, es->es_widget.y + es->es_position, 11, 11);
+#endif
 }
 
 void eqslider_set_mainwin_text(EqSlider * es)
diff -Naur xmms-1.2.4/xmms/input.c xmms-1.2.4j-20001128/xmms/input.c
--- xmms-1.2.4/xmms/input.c	Wed Aug 30 03:18:19 2000
+++ xmms-1.2.4j-20001128/xmms/input.c	Tue Nov 28 16:31:34 2000
@@ -17,6 +17,9 @@
  */
 #include "xmms.h"
 #include "fft.h"
+#ifdef KANJI
+#  include "kanji.h"
+#endif
 
 static pthread_mutex_t vis_mutex = PTHREAD_MUTEX_INITIALIZER;
 
@@ -342,6 +345,16 @@
 		(*title) = NULL;
 		(*length) = -1;
 	}
+
+#ifdef KANJI
+	if (*title != NULL) {
+		gchar *tmp;
+
+		tmp = kanji_sjis2euc_string(*title);
+		g_free(*title);
+		*title = tmp;
+	}
+#endif
 }
 
 void input_file_info_box(gchar * filename)
@@ -533,8 +546,3 @@
 	if (ip && ip->configure)
 		ip->configure();
 }
-
-
-
-
-
diff -Naur xmms-1.2.4/xmms/kanji.c xmms-1.2.4j-20001128/xmms/kanji.c
--- xmms-1.2.4/xmms/kanji.c	Thu Jan  1 09:00:00 1970
+++ xmms-1.2.4j-20001128/xmms/kanji.c	Tue Nov 28 16:31:34 2000
@@ -0,0 +1,711 @@
+/*
+ * kanji.c -- kanji code convertion routine
+ * (C)Copyright 1998 by Hiroshi Takekawa <t80679@hongo.ecc.u-tokyo.ac.jp>
+ * Last Modified: Fri Jan 28 14:40:24 2000.
+ */
+
+#include <stdio.h>
+#include <string.h>
+#include <stdlib.h>
+#include "kanji.h"
+
+/* 半角 -> 全角 */
+word han2zen[] = {
+  0x0000, 0x2123, 0x2156, 0x2157, /* 　。「」 */
+  0x2122, 0x2126, 0x2572, 0x2521, /* 、・ヲァ */
+  0x2523, 0x2525, 0x2527, 0x2529, /* ィゥェォ */
+  0x2563, 0x2565, 0x2567, 0x2543, /* ャュョッ */
+  0x213c, 0x2522, 0x2524, 0x2526, /* ーアイウ */
+  0x2528, 0x252a, 0x252b, 0x252d, /* エオカキ */
+  0x252f, 0x2531, 0x2533, 0x2535, /* クケコサ */
+  0x2537, 0x2539, 0x253b, 0x253d, /* シスセソ */
+  0x253f, 0x2541, 0x2544, 0x2546, /* タチツテ */
+  0x2548, 0x254a, 0x254b, 0x254c, /* トナニヌ */
+  0x254d, 0x254e, 0x254f, 0x2552, /* ネノハヒ */
+  0x2555, 0x2558, 0x255b, 0x255e, /* フヘホマ */
+  0x255f, 0x2560, 0x2561, 0x2562, /* ミムメモ */
+  0x2564, 0x2566, 0x2568, 0x2569, /* ヤユヨラ */
+  0x256a, 0x256b, 0x256c, 0x256d, /* リルレロ */
+  0x256f, 0x2573, 0x212b, 0x212c, /* ワン゛゜ */
+};
+
+/* 半角 + 濁点 -> 全角 */
+word han2zend[] = {
+  0x0000, 0x0000, 0x0000, 0x0000, /* 　。「」 */
+  0x0000, 0x0000, 0x0000, 0x0000, /* 、・ヲァ */
+  0x0000, 0x0000, 0x0000, 0x0000, /* ィゥェォ */
+  0x0000, 0x0000, 0x0000, 0x0000, /* ャュョッ */
+  0x0000, 0x0000, 0x0000, 0x0000, /* ーアイウ */
+  0x0000, 0x0000, 0x252c, 0x252e, /* エオカキ */
+  0x2530, 0x2532, 0x2534, 0x2536, /* クケコサ */
+  0x2538, 0x253a, 0x253c, 0x353e, /* シスセソ */
+  0x2540, 0x2542, 0x2545, 0x2547, /* タチツテ */
+  0x2549, 0x0000, 0x0000, 0x0000, /* トナニヌ */
+  0x0000, 0x0000, 0x2550, 0x2553, /* ネノハヒ */
+  0x2556, 0x2559, 0x255c, 0x0000, /* フヘホマ */
+  0x0000, 0x0000, 0x0000, 0x0000, /* ミムメモ */
+  0x0000, 0x0000, 0x0000, 0x0000, /* ヤユヨラ */
+  0x0000, 0x0000, 0x0000, 0x0000, /* リルレロ */
+  0x0000, 0x0000, 0x0000, 0x0000, /* ワン゛゜ */
+};
+
+/* 半角 + 半濁点 -> 全角 */
+word han2zenh[] = {
+  0x0000, 0x0000, 0x0000, 0x0000, /* 　。「」 */
+  0x0000, 0x0000, 0x0000, 0x0000, /* 、・ヲァ */
+  0x0000, 0x0000, 0x0000, 0x0000, /* ィゥェォ */
+  0x0000, 0x0000, 0x0000, 0x0000, /* ャュョッ */
+  0x0000, 0x0000, 0x0000, 0x0000, /* ーアイウ */
+  0x0000, 0x0000, 0x0000, 0x0000, /* クケコサ */
+  0x2538, 0x253a, 0x253c, 0x353e, /* シスセソ */
+  0x2540, 0x2542, 0x2545, 0x2547, /* タチツテ */
+  0x2549, 0x0000, 0x0000, 0x0000, /* トナニヌ */
+  0x0000, 0x0000, 0x2550, 0x2553, /* ネノハヒ */
+  0x2556, 0x2559, 0x255c, 0x0000, /* フヘホマ */
+  0x0000, 0x0000, 0x0000, 0x0000, /* ミムメモ */
+  0x0000, 0x0000, 0x0000, 0x0000, /* ヤユヨラ */
+  0x0000, 0x0000, 0x0000, 0x0000, /* リルレロ */
+  0x0000, 0x0000, 0x0000, 0x0000, /* ワン゛゜ */
+};
+
+/* preserve charset specified by JIS escape code */
+static int Charset = NOTDETERMINED;
+static int Charflag = NOTDETERMINED;
+
+/* clear charset before processing new text */
+void kanji_initialize(void)
+{
+  Charset = NOTDETERMINED;
+  Charflag = -1;
+}
+
+/*
+ * kanji_checkcode
+ * function: make an effort to determine kanji code
+ * str: pointer to string
+ * f: pointer to code flag
+ *          0: cannot determine, maybe treated as ascii
+ *          1: ascii
+ *          2: euc
+ *          4: jis
+ *          8: sjis
+ *         16: JISX0201 hankaku kana
+ * return: read byte size
+ */
+int kanji_checkcode(byte *str, int *f)
+{
+  byte first = *str, second = *(str + 1);
+
+  if (Charset != NOTDETERMINED) {
+    *f = Charset;
+    return 0;
+  }
+
+  *f = 0;
+  if (first >= 0xa0 && first <= 0xdf)
+    *f |= X0201;
+
+  if (((first >= 0x81 && first <= 0x9f) || (first >= 0xe0 && first <= 0xfc)) &&
+      (second >= 0x40 && second <= 0xfc && second != 0x7f))
+    *f |= SJIS;
+
+  if (first >= 0xa1 && first <= 0xfe && second >= 0xa1 && second <= 0xfe &&
+      !(Charset & X0201)) {
+    *f &= ~X0201;
+    *f |= EUC;
+  }
+
+  if (first == 0x8e && second >= 0xa0 && second <= 0xdf)
+    *f |= (EUC | X0201);
+
+  return 0;
+}
+
+/*
+ * kanji_han2zen
+ * function: convert JISX0201 hankaku kana to zenkaku
+ * str: pointer to string
+ * c: pointer to converted char
+ * return: read byte size
+ */
+int kanji_han2zen(byte *str, word *c)
+{
+  byte f = *str++;
+  byte s = *str++;
+
+  /* 半角カナか？ */
+  if (f < 0xa0 || f > 0xdf) {
+    *c = (word)f;
+    return 1;
+  }
+
+  /* 半角カナらしい */
+  f -= 0xa0;
+  if (s == 0xde) {
+    /* 濁点がついている */
+    if (han2zend[f]) {
+      /* 濁点つきを一字であらわせる */
+      *c = han2zend[f];
+      return 2;
+    }
+    /* ナ゛ニ〜 とか書かれてるかもしれない… */
+    *c = han2zen[f];
+    return 1;
+  } else if (s == 0xdf) {
+    /* 半濁点がついている */
+    if (han2zenh[f]) {
+      *c = han2zenh[f];
+      return 2;
+    }
+    /* 濁点に比べると格段に需要がない気もする */
+    *c = han2zen[f];
+    return 1;
+  }
+
+  *c = han2zen[f];
+  return 1;
+}
+
+/*
+ * kanji_zen2han
+ * function: convert JISX0208 Katakana to JISX0201 Katakana
+ * str: pointer to string
+ * c: pointer to converted char
+ * return: read byte size
+ */
+
+/* very ugly... but works... */
+int kanji_zen2han(byte *str, word *c)
+{
+  int i;
+  word w;
+
+  w = (*str << 8) + *(str + 1);
+  w &= ~0x8080; /* EUCでもOK */
+
+  /* 清音の中にあるか探す */
+  for (i = 0; i < 64; i++)
+    if (w == han2zen[i]) {
+      *c = i + 0x20;
+      return 2;
+    }
+
+  /* 濁音の中にあるか探す */
+  for (i = 0; i < 64; i++)
+    if (w == han2zend[i]) {
+      *c = ((i + 0x20) << 8) + 0x5e;
+      return 2;
+    }
+
+  /* 半濁音の中にあるか探す */
+  for (i = 0; i < 64; i++)
+    if (w == han2zenh[i]) {
+      *c = ((i + 0x20) << 8) + 0x5f;
+      return 2;
+    }
+
+  return 0;
+}
+
+/*
+ * kanji_jis2euc
+ * function: convert from jis to euc
+ * str: pointer to string
+ * c: pointer to converted char
+ * return: read byte size
+ */
+int kanji_jis2euc(byte *str, word *c)
+{
+  int first, second, a = 0, f = Charset;
+
+  first  = *str;
+  second = *(str + 1);
+
+  if (first == 0x1b) {
+    byte third  = *(str + 2);
+    byte fourth = *(str + 3);
+
+    /* JIS escape code */
+    if (second == '$' && third == 'B')
+      /* JIS X0208-1983 */
+      f = JIS;
+    else if (second == '$' && third == '@')
+      /* JIS X0208-1978 */
+      f = JIS;
+    else if (second == '(' && third == 'J')
+      /* JIS X0201ローマ字 */
+      f = JISROMAN;
+    else if (second == '(' && third == 'I')
+      /* JIS X0201片仮名 */
+      f = JIS | X0201;
+    else if (second == '(' && third == 'B')
+      f = ASCII;
+    else/* 他のコードセットはサポートしていない… */
+      f = NOTDETERMINED;
+    Charset = f;
+    if (f == JIS && (fourth >= 0xa0 && fourth <= 0xdf))
+      f |= X0201;
+    str += 3;
+    a = 3;
+  }
+
+  if (!(f & JIS)) {
+    *c = *str;
+    return a + 1;
+  }
+
+  if (f & X0201) {
+    *c = 0x8e80 | *str;
+    return a + 1;
+  }
+
+  *c = ((*str << 8) | *(str + 1)) | 0x8080;
+  return a + 2;
+}
+
+/*
+ * kanji_jis2sjis
+ * function: convert from jis to sjis
+ * str: pointer to string
+ * c: pointer to converted char
+ * return: read byte size
+ */
+int kanji_jis2sjis(byte *str, word *c)
+{
+  int a = 0, f = Charset;
+  byte first, second, h, l;
+
+  h = first  = *str;
+  l = second = *(str + 1);
+
+  if (first == 0x1b) {
+    byte third  = *(str + 2);
+    byte fourth = *(str + 3);
+
+    /* JIS escape code */
+    if (second == '$' && third == 'B')
+      /* JIS X0208-1983 */
+      f = JIS;
+    else if (second == '$' && third == '@')
+      /* JIS X0208-1978 */
+      f = JIS;
+    else if (second == '(' && third == 'J')
+      /* JIS X0201ローマ字 */
+      f = JISROMAN;
+    else if (second == '(' && third == 'I')
+      /* JIS X0201片仮名 */
+      f = JIS | X0201;
+    else if (second == '(' && third == 'B')
+      f = ASCII;
+    else/* 他のコードセットはサポートしていない… */
+      f = NOTDETERMINED;
+    Charset = f;
+    if (f == JIS && (fourth >= 0xa0 && fourth <= 0xdf))
+      f |= X0201;
+    str += 3;
+    a = 3;
+  }
+
+  if (!(f & JIS) || (!(f * X0201))) {
+    *c = *str;
+    return a + 1;
+  }
+    
+  l += (h & 1) ? 0x1f : 0x7d;
+  if (l >= 0x7f)
+    l++;
+  h = ((h - 0x21) >> 1) + 0x81;
+  if (h > 0x9f)
+    h += 0x40;
+
+  *c = (h << 8) | l;
+  return a + 2;
+}
+
+/*
+ * kanji_euc2jis
+ * function: convert from euc to jis
+ * str: pointer to string
+ * c: pointer to converted char
+ * return: read byte size
+ */
+int kanji_euc2jis(byte *str, word *c)
+{
+  int f = 0;
+  byte first, second;
+
+  first = *str;
+  second = *(str + 1);
+
+  if (first >= 0xa1 && first <= 0xfe && second >= 0xa1 && second <= 0xfe)
+    f = EUC;
+
+  if (first == 0x8e && second >= 0xa0 && second <= 0xdf)
+    f = EUC | X0201;
+
+  Charflag = f;
+
+  if (!(f & EUC)) {
+    *c = *str;
+    return 1;
+  }
+
+  if (f & X0201) {
+    str++;
+    /* return 1 + kanji_han2zen(str, c); */
+    *c = *str & 0x7f;
+  } else
+    *c = ((*str << 8) | *(str + 1)) & 0x7f7f;
+  return 2;
+}
+
+/*
+ * kanji_euc2sjis
+ * function: convert from euc to sjis
+ * str: pointer to string
+ * c: pointer to convert char
+ * return: read byte size
+ */
+int kanji_euc2sjis(byte *str, word *c)
+{
+  int f = 0;
+  word j;
+  byte h, l, first, second;
+
+  first = *str;
+  second = *(str + 1);
+
+  if (first >= 0xa1 && first <= 0xfe && second >= 0xa1 && second <= 0xfe)
+    f = EUC;
+
+  if (first == 0x8e && second >= 0xa0 && second <= 0xdf)
+    f = EUC | X0201;
+
+  if (f & X0201) {
+    *c = *(str + 1);
+    return 2;
+  }
+
+  if (!(f & EUC)) {
+    *c = *str;
+    return 1;
+  }
+
+  j = ((*str << 8) | *(str + 1)) & 0x7f7f;
+
+  h = j >> 8;
+  l = j & 0xff;
+
+  l += (h & 1) ? 0x1f : 0x7d;
+  if (l >= 0x7f)
+    l++;
+  h = ((h - 0x21) >> 1) + 0x81;
+  if (h > 0x9f)
+    h += 0x40;
+
+  *c = (h << 8) | l;
+  return 2;
+}
+
+/*
+ * kanji_sjis2euc
+ * function: convert from sjis to euc
+ * str: pointer to string
+ * c: pointer to convert char
+ * return: read byte size
+ */
+int kanji_sjis2euc(byte *str, word *c)
+{
+  int f = 0;
+  byte h, l, first, second;
+
+  first = *str;
+  second = *(str + 1);
+
+  if (first >= 0xa0 && first <= 0xdf)
+    f = X0201;
+
+  if (((first >= 0x81 && first <= 0x9f) || (first >= 0xe0 && first <= 0xfc)) &&
+      (second >= 0x40 && second <= 0xfc && second != 0x7f))
+    f |= SJIS;
+
+  if (f & X0201) {
+    *c = 0x8e00 | *str;
+    return 1;
+  }
+
+  if (!(f & SJIS)) {
+    *c = *str;
+    return 1;
+  }
+
+  h = *str;
+  l = *(str + 1);
+
+  h -= (h <= 0x9f) ? 0x71 : 0xb1;
+  h = (h << 1) + 1;
+  if (l >= 0x9f) {
+    l -= 0x7e;
+    h++;
+  } else if (l > 0x7f)
+    l -= 0x20;
+  else
+    l -= 0x1f;
+
+  h |= 0x80;
+  l |= 0x80;
+
+  *c = (h << 8) | l;
+  return 2;
+}
+
+/*
+ * kanji_sjis2jis
+ * function: convert from sjis to jis
+ * str: pointer to string
+ * c: pointer to convert char
+ * return: read byte size
+ */
+int kanji_sjis2jis(byte *str, word *c)
+{
+  int f = 0;
+  byte h, l, first, second;
+
+  first = *str;
+  second = *(str + 1);
+
+  if (first >= 0xa0 && first <= 0xdf)
+    f = X0201;
+
+  if (((first >= 0x81 && first <= 0x9f) || (first >= 0xe0 && first <= 0xfc)) &&
+      (second >= 0x40 && second <= 0xfc && second != 0x7f))
+    f |= SJIS;
+
+  if (f & X0201) {
+    *c = *str;
+    return 1;
+  }
+
+  if (!(f & SJIS)) {
+    *c = *str;
+    return 1;
+  }
+
+  h = *str;
+  l = *(str + 1);
+
+  h -= (h <= 0x9f) ? 0x71 : 0xb1;
+  h = (h << 1) + 1;
+  if (l >= 0x9e) {
+    l -= 0x7e;
+    h++;
+  } else if (l > 0x7f)
+    l -= 0x20;
+  else
+    l -= 0x1f;
+
+  *c = (h << 8) | l;
+  return 2;
+}
+
+/*
+ * kanji_jis2euc_string
+ * function: convert string from jis to euc
+ * input: input jis string
+ * return: pointer to output euc string
+ */
+byte *kanji_jis2euc_string(byte *input)
+{
+  byte *ptr, *output;
+  word c;
+
+  if ((ptr = output = malloc(strlen(input) * 2)) == NULL)
+    return NULL;
+
+  while (*input != '\0') {
+    input += kanji_jis2euc(input, &c);
+    if ((c >> 8) == 0)
+      *ptr++ = (byte)c;
+    else {
+      *ptr++ = (byte)(c >> 8);
+      *ptr++ = (byte)c & 0xff;
+    }
+  }
+  *ptr++ = '\0';
+
+  return realloc(output, ptr - output);
+}
+
+/*
+ * kanji_jis2sjis_string
+ * function: convert string from jis to sjis
+ * input: input jis string
+ * return: pointer to output sjis string
+ */
+byte *kanji_jis2sjis_string(byte *input)
+{
+  byte *ptr, *output;
+  word c;
+
+  if ((ptr = output = malloc(strlen(input) * 2)) == NULL)
+    return NULL;
+
+  while (*input != '\0') {
+    input += kanji_jis2sjis(input, &c);
+    if ((c >> 8) == 0)
+      *ptr++ = (byte)c;
+    else {
+      *ptr++ = (byte)(c >> 8);
+      *ptr++ = (byte)c & 0xff;
+    }
+  }
+  *ptr++ = '\0';
+
+  return realloc(output, ptr - output);
+}
+
+/*
+ * kanji_euc2jis_string
+ * function: convert string from euc to jis
+ * input: input euc string
+ * return: pointer to output jis string
+ */
+byte *kanji_euc2jis_string(byte *input)
+{
+  byte *ptr, *output;
+  int fold;
+  word c;
+
+  if ((ptr = output = malloc(strlen(input) * 2)) == NULL)
+    return NULL;
+
+  while (*input != '\0') {
+    fold = Charflag;
+    input += kanji_euc2jis(input, &c);
+    Charflag &= ~SJIS;
+    if (fold != Charflag) {
+      *ptr++ = 0x1b;
+      if (Charflag == (EUC | X0201)) {
+	*ptr++ = '(';
+	*ptr++ = 'I';
+      } else if (Charflag == EUC) {
+	*ptr++ = '$';
+	*ptr++ = 'B';
+      } else {
+	*ptr++ = '(';
+	*ptr++ = 'B';
+      }
+    }
+
+    if ((c >> 8) == 0)
+      *ptr++ = (byte)c;
+    else {
+      *ptr++ = (byte)(c >> 8);
+      *ptr++ = (byte)c & 0xff;
+    }
+  }
+  *ptr++ = '\0';
+
+  return realloc(output, ptr - output);
+}
+
+/*
+ * kanji_euc2sjis_string
+ * function: convert string from euc to sjis
+ * input: input euc string
+ * return: pointer to output sjis string
+ */
+byte *kanji_euc2sjis_string(byte *input)
+{
+  byte *ptr, *output;
+  word c;
+
+  if ((ptr = output = malloc(strlen(input) * 2)) == NULL)
+    return NULL;
+
+  while (*input != '\0') {
+    input += kanji_euc2sjis(input, &c);
+    if ((c >> 8) == 0)
+      *ptr++ = (byte)c;
+    else {
+      *ptr++ = (byte)(c >> 8);
+      *ptr++ = (byte)c & 0xff;
+    }
+  }
+  *ptr++ = '\0';
+
+  return realloc(output, ptr - output);
+}
+
+/*
+ * kanji_sjis2euc_string
+ * function: convert string from sjis to euc
+ * input: input sjis string
+ * return: pointer to output euc string
+ */
+byte *kanji_sjis2euc_string(byte *input)
+{
+  byte *ptr, *output;
+  word c;
+
+  if ((ptr = output = malloc(strlen(input) * 2)) == NULL)
+    return NULL;
+
+  while (*input != '\0') {
+    input += kanji_sjis2euc(input, &c);
+    if ((c >> 8) == 0)
+      *ptr++ = (byte)c;
+    else {
+      *ptr++ = (byte)(c >> 8);
+      *ptr++ = (byte)c & 0xff;
+    }
+  }
+  *ptr++ = '\0';
+
+  return realloc(output, ptr - output);
+}
+
+/*
+ * kanji_euc2sjis_string
+ * function: convert string from sjis to jis
+ * input: input sjis string
+ * return: pointer to output jis string
+ */
+byte *kanji_sjis2jis_string(byte *input)
+{
+  byte *ptr, *output;
+  int fold;
+  word c;
+
+  if ((ptr = output = malloc(strlen(input) * 2)) == NULL)
+    return NULL;
+
+  while (*input != '\0') {
+    fold = Charflag;
+    input += kanji_sjis2jis(input, &c);
+    Charflag &= ~EUC;
+    if (fold != Charflag) {
+      *ptr++ = 0x1b;
+      if (Charflag & X0201) {
+	*ptr++ = '(';
+	*ptr++ = 'I';
+      } else if (Charflag & SJIS) {
+	*ptr++ = '$';
+	*ptr++ = 'B';
+      } else {
+	*ptr++ = '(';
+	*ptr++ = 'B';
+      }
+    }
+
+    if ((c >> 8) == 0)
+      *ptr++ = (byte)c;
+    else {
+      *ptr++ = (byte)(c >> 8);
+      *ptr++ = (byte)c & 0xff;
+    }
+  }
+  *ptr++ = '\0';
+
+  return realloc(output, ptr - output);
+}
diff -Naur xmms-1.2.4/xmms/kanji.h xmms-1.2.4j-20001128/xmms/kanji.h
--- xmms-1.2.4/xmms/kanji.h	Thu Jan  1 09:00:00 1970
+++ xmms-1.2.4j-20001128/xmms/kanji.h	Tue Nov 28 16:31:34 2000
@@ -0,0 +1,33 @@
+/*
+ * kanji.h -- kanji code conversion library header
+ * (C)Copyright 1998 by Hiroshi Takekawa
+ * Last Modified: Fri Jan 28 14:40:24 2000.
+ */
+
+typedef unsigned char byte;
+typedef unsigned short int word;
+
+#define NOTDETERMINED  0
+#define ASCII          1
+#define JISROMAN       2
+#define EUC            4
+#define JIS            8
+#define SJIS          16
+#define X0201         32
+
+void  kanji_initialize(void);
+int   kanji_checkcode(byte *str, int *f);
+int   kanji_han2zen(byte *str, word *c);
+int   kanji_zen2han(byte *str, word *c);
+int   kanji_jis2euc(byte *str, word *c);
+int   kanji_jis2sjis(byte *str, word *c);
+int   kanji_euc2sjis(byte *str, word *c);
+int   kanji_euc2jis(byte *str, word *c);
+int   kanji_sjis2euc(byte *str, word *c);
+int   kanji_sjis2jis(byte *str, word *c);
+byte *kanji_jis2euc_string(byte *str);
+byte *kanji_jis2sjis_string(byte *str);
+byte *kanji_euc2jis_string(byte *str);
+byte *kanji_euc2sjis_string(byte *str);
+byte *kanji_sjis2euc_string(byte *str);
+byte *kanji_sjis2jis_string(byte *str);
diff -Naur xmms-1.2.4/xmms/main.c xmms-1.2.4j-20001128/xmms/main.c
--- xmms-1.2.4/xmms/main.c	Tue Nov 21 00:45:10 2000
+++ xmms-1.2.4j-20001128/xmms/main.c	Tue Nov 28 16:31:34 2000
@@ -1008,7 +1010,7 @@
 	else
 		textbox_set_text(mainwin_rate_text, "VBR");
 
-	sprintf(text, "%2d", freq);
+	sprintf(text, "%2d", (int)(freq / 1000));
 	textbox_set_text(mainwin_freq_text, text);
 	monostereo_set_num_channels(mainwin_monostereo, nch);
 
diff -Naur xmms-1.2.4/xmms/playlist.c xmms-1.2.4j-20001128/xmms/playlist.c
--- xmms-1.2.4/xmms/playlist.c	Thu Nov  9 20:12:08 2000
+++ xmms-1.2.4j-20001128/xmms/playlist.c	Tue Nov 28 16:31:35 2000
@@ -20,6 +20,9 @@
 #include "libxmms/util.h"
 #include <sys/stat.h>
 #include <unistd.h>
+#ifdef KANJI
+#  include "kanji.h"
+#endif
 
 GList *playlist = NULL;
 GList *shuffle_list = NULL;
@@ -465,7 +468,11 @@
 	if (entry)
 	{
 		g_free(entry->title);
+#ifdef KANJI
+		entry->title = kanji_sjis2euc_string(title);
+#else
 		entry->title = g_strdup(title);
+#endif
 		entry->length = length;
 	}
 	PL_UNLOCK();
diff -Naur xmms-1.2.4/xmms/playlist_list.c xmms-1.2.4j-20001128/xmms/playlist_list.c
--- xmms-1.2.4/xmms/playlist_list.c	Thu Nov  9 20:12:08 2000
+++ xmms-1.2.4j-20001128/xmms/playlist_list.c	Tue Nov 28 16:31:35 2000
@@ -19,7 +19,12 @@
 #include "xmms.h"
 
 #ifdef HAVE_WCHAR_H
-#include <wchar.h>
+# include <wchar.h>
+# undef KANJI
+#else
+# ifdef KANJI
+#  include "kanji.h"
+# endif
 #endif
 
 gint playlist_list_auto_drag_down_func(gpointer data)
@@ -290,8 +295,15 @@
 	
 	newlen = len + 2;
 	
+#if 0
 	while (gdk_text_width_wc(font, gwtext, len) > width && len > 4)
 	{
+#else
+	/* fixed by Hiroshi Takekawa <sian@big.or.jp> */
+	{
+	gint lb, rb, w, as, de;
+	while ((gdk_text_extents_wc(font, gwtext, len, &lb, &rb, &w, &as, &de), w > width) && len > 4)
+	{
 		/*
 		 * First check if the string gets short enough by
 		 * extending it with one character and then convert
@@ -304,6 +316,8 @@
 		gwtext[len - 1] = L'.';
 		gwtext[len] = L'\0';
 	}
+#endif
+	}
 	
 	gdk_draw_text_wc(pl->pl_widget.parent, font, pl->pl_widget.gc, pl->pl_widget.x, pl->pl_widget.y + line * pl->pl_fheight + font->ascent, gwtext, len);
 	g_free(gwtext);
@@ -333,6 +347,52 @@
 			*tmp = '\0';
 		}
 	len = strlen(text);
+#ifdef KANJI
+			kanji_initialize();
+			if (gdk_text_measure(font, text, len) > width && len > 4)
+			{
+				gint euc_p, euc_flag;
+
+				for (euc_p = 0; euc_p < len - 2;) {
+					kanji_checkcode(text + euc_p, &euc_flag);
+					if (euc_flag & EUC && !(euc_flag & X0201))
+						euc_p += 2;
+					else
+						euc_p++;
+				}
+				if (euc_p == len - 2)
+				{
+					text = g_realloc(text, len + 2);
+					len++;
+				}
+				else /* euc_p == len - 1 */
+				{
+					text = g_realloc(text, len + 3);
+					len += 2;
+				}
+				text[euc_p    ] = '.';
+				text[euc_p + 1] = '.';
+				text[euc_p + 2] = '.';
+				text[euc_p + 3] = '\0';
+				while (gdk_text_measure(font, text, len) > width && len > 4)
+				{
+					kanji_checkcode(text + euc_p - 2, &euc_flag);
+					if (euc_flag & EUC && !(euc_flag & X0201))
+					{
+						euc_p -= 2;
+						text[euc_p + 1] = '.';
+						len -= 2;
+					}
+					else
+					{
+						euc_p--;
+						len--;
+					}
+					text[euc_p    ] = '.';
+					text[euc_p + 3] = '\0';
+				}
+			}
+#else
 	while (gdk_text_width(font, text, len) > width && len > 4)
 	{
 		len--;
@@ -341,6 +401,7 @@
 		text[len - 1] = '.';
 		text[len] = '\0';
 	}
+#endif
 	
 	gdk_draw_text(pl->pl_widget.parent, font, pl->pl_widget.gc, pl->pl_widget.x, pl->pl_widget.y + line * pl->pl_fheight + font->ascent, text, len);
 }
@@ -350,10 +411,15 @@
 	PlayList_List *pl = (PlayList_List *) w;
 	GdkGC *gc;
 	GdkPixmap *obj;
-	GdkFont *font = NULL;
 	gint width, height;
 	gchar *text, *title;
 	gint i, tw, max_first;
+#ifndef FONT_CACHE
+	GdkFont *font = NULL;
+#else
+	static GdkFont *font = NULL;
+	static char *loaded_font = NULL;
+#endif
 
 	gc = pl->pl_widget.gc;
 	width = pl->pl_widget.width;
@@ -364,7 +430,21 @@
 	gdk_gc_set_foreground(gc, get_skin_color(SKIN_PLEDIT_NORMALBG));
 	gdk_draw_rectangle(obj, gc, TRUE, pl->pl_widget.x, pl->pl_widget.y, width, height);
 
+#ifdef FONT_CACHE
+	/* XXX: should be moved to util_list_font_load() */
+	if (font == NULL || (loaded_font != NULL && strcmp(loaded_font, cfg.playlist_font) != 0)) {
+		if (font != NULL) {
+			gdk_font_unref(font);
+			free(loaded_font);
+		}
+		font = gdk_fontset_load(cfg.playlist_font);
+		if (font != NULL)
+			loaded_font = g_strdup(cfg.playlist_font);
+	}
+	if (font != NULL)
+#else
 	if ((font = util_font_load(cfg.playlist_font)) != NULL)
+#endif
 	{
 		GList *list;
 		PL_LOCK();
@@ -406,8 +486,8 @@
 				gchar length[20];
 				
 				sprintf(length, "%d:%-2.2d", entry->length / 60000, (entry->length / 1000) % 60);
-				gdk_draw_text(obj, font, gc, pl->pl_widget.x + width - gdk_text_width(font, length, strlen(length)) - 2, pl->pl_widget.y + (i - pl->pl_first) * pl->pl_fheight + font->ascent, length, strlen(length));
-				tw = width - gdk_text_width(font, length, strlen(length)) - 5;
+				gdk_draw_text(obj, font, gc, pl->pl_widget.x + width - gdk_text_measure(font, length, strlen(length)) - 2, pl->pl_widget.y + (i - pl->pl_first) * pl->pl_fheight + font->ascent, length, strlen(length));
+				tw = width - gdk_text_measure(font, length, strlen(length)) - 5;
 			}
 			else
 				tw = width;
@@ -425,8 +505,11 @@
 			list = list->next;
 			i++;
 		}
+
 		PL_UNLOCK();
+#ifndef FONT_CACHE
 		gdk_font_unref(font);
+#endif
 	}
 	else
 	{
diff -Naur xmms-1.2.4/xmms/playlistwin.c xmms-1.2.4j-20001128/xmms/playlistwin.c
--- xmms-1.2.4/xmms/playlistwin.c	Tue Nov 21 00:45:10 2000
+++ xmms-1.2.4j-20001128/xmms/playlistwin.c	Tue Nov 28 16:31:35 2000
@@ -17,6 +17,9 @@
  */
 #include "xmms.h"
 #include "libxmms/dirbrowser.h"
+#ifdef KANJI
+#  include "kanji.h"
+#endif
 
 GtkWidget *playlistwin, *playlistwin_save_filesel = NULL;
 GtkWidget *playlistwin_load_filesel = NULL, *playlistwin_url_window = NULL,
@@ -189,10 +192,12 @@
 
 	pos = g_strdup_printf("%d. ", __get_playlist_position() + 1);
 
-	if (entry->length != -1)
+ 	if (entry->length != -1)
 	{
 		time = g_strdup_printf("%d:%-2.2d", entry->length / 60000, (entry->length / 1000) % 60);
 		max_len -= strlen(time);
+		if (max_len <= 0)
+			max_len = (cfg.playlist_width - 35) / 5 - strlen(time);
 		info = g_strdup_printf("%s%-*.*s%s", pos, max_len - (int)strlen(pos), max_len - (int)strlen(pos), title, time);
 		g_free(time);
 
@@ -223,7 +228,6 @@
 			*tmp = '\0';
 		}
 	}
-
 	textbox_set_text(playlistwin_sinfo, info);
 	g_free(info);
 }
diff -Naur xmms-1.2.4/xmms/skin.c xmms-1.2.4j-20001128/xmms/skin.c
--- xmms-1.2.4/xmms/skin.c	Sat Nov 25 04:11:53 2000
+++ xmms-1.2.4j-20001128/xmms/skin.c	Tue Nov 28 16:31:35 2000
@@ -227,6 +227,8 @@
 {
 	gchar *filename, *value;
 	GdkColor *color = NULL;
+	gint base;
+	gint hw, sc;
 
 	filename = find_file_recursively(path, file);
 	if (filename)
@@ -261,7 +263,7 @@
 			if (len >= 2)
 				color->blue = hex_chars_to_int(*ptr,
 							       *(ptr + 1));
-				
+
 
 			gdk_color_alloc(gdk_window_get_colormap(playlistwin->window), color);
 			g_free(value);
@@ -286,12 +288,42 @@
 
 	g_free(filename);
 
-	if (!skinpixmap->pixmap)
+	if(!skinpixmap->pixmap)
 		return;
 	gdk_window_get_size(skinpixmap->pixmap, &w, &h);
 
 	skinpixmap->current_width = MIN(w, skinpixmap->width);
 	skinpixmap->current_height = MIN(h, skinpixmap->height);
+
+#ifndef NO_AUTO_SKIN_COMPLETION
+	if (!strcmp(file, "eqmain.bmp"))
+	{
+		if (skinpixmap->current_height == 116)
+		{
+			gint i;
+			GdkGC *skin_gc;
+
+			skin_gc = gdk_gc_new(mainwin->window);
+
+			/* eq. titlebar in focus */
+			gdk_draw_pixmap(skinpixmap->pixmap, skin_gc, skinpixmap->pixmap, 0, 0, 0, 134, 275, 14);
+			/* eq. titlebar out of focus */
+			gdk_draw_pixmap(skinpixmap->pixmap, skin_gc, skinpixmap->pixmap, 0, 0, 0, 149, 275, 14);
+			/* on/auto */
+			for (i = 0; i < 4; i++)
+				gdk_draw_pixmap(skinpixmap->pixmap, skin_gc, skinpixmap->pixmap, 14, 18, 10 + i * 59, 119, 25 + 33, 12);
+			/* presets (normal) */
+			gdk_draw_pixmap(skinpixmap->pixmap, skin_gc, skinpixmap->pixmap, 217, 18, 224, 164, 44, 12);
+			/* presets (pressed) */
+			gdk_draw_pixmap(skinpixmap->pixmap, skin_gc, skinpixmap->pixmap, 217, 18, 224, 176, 44, 12);
+			/* sliders are handled by eq_slider.c */
+
+			gdk_gc_destroy(skin_gc);
+		}
+	}
+#endif
+
+	return;
 }
 
 GdkBitmap *skin_create_transparent_mask(const gchar * path, const gchar * file, const gchar * section, GdkWindow * window, gint width, gint height, gboolean doublesize)
@@ -509,7 +541,7 @@
 
 static void _load_skin(const gchar * path, gboolean force)
 {
-	char *ending, *tmp = NULL, *tempdir, *unzip, *tar;
+	char *ending, *tmp = NULL, *tempdir, *unzip, *tar, *lha;
 
 	if (!force)
 	{
@@ -531,8 +563,9 @@
 		if (ending)
 		{
 			if (!strcasecmp(ending, ".zip") || !strcasecmp(ending, ".wsz") ||
-			    !strcasecmp(ending, ".tgz") || !strcasecmp(ending, ".gz") ||
-			    !strcasecmp(ending, ".bz2") || !strcasecmp(ending, ".tar"))
+			    !strcasecmp(ending, ".tgz") || !strcasecmp(ending, ".gz")  ||
+			    !strcasecmp(ending, ".bz2") || !strcasecmp(ending, ".tar") ||
+			    !strcasecmp(ending, ".lzh"))
 			{
 
 				tempdir = tempnam(NULL, NULL);
@@ -543,6 +576,9 @@
 				tar = getenv("TARCMD");
 				if (!tar)
 					tar = "tar";
+				lha = getenv("LHACMD");
+				if (!lha)
+					lha = "lha";
 				if (!strcasecmp(ending, ".zip") || !strcasecmp(ending, ".wsz"))
 				{
 					tmp = g_strdup_printf("%s >/dev/null -o -j \"%s\" -d %s", unzip, path, tempdir);
@@ -562,6 +598,11 @@
 					tmp = g_strdup_printf("%s >/dev/null xf \"%s\" -C %s", tar, path, tempdir);
 					mkdir(tempdir, 0755);	/* Permissions: 755 */
 				}
+				if (!strcasecmp(ending, ".lzh"))
+				{
+					tmp = g_strdup_printf("%s >/dev/null ew=%s %s", lha, tempdir, path);
+					mkdir(tempdir, 0755);	/* Permissions: 755 */
+				}
 				system(tmp);
 				g_free(tmp);
 				load_skin(tempdir);
diff -Naur xmms-1.2.4/xmms/skinwin.c xmms-1.2.4j-20001128/xmms/skinwin.c
--- xmms-1.2.4/xmms/skinwin.c	Tue Jul 18 06:29:35 2000
+++ xmms-1.2.4j-20001128/xmms/skinwin.c	Tue Nov 28 16:31:35 2000
@@ -118,6 +118,8 @@
 			*tmp = '\0';
 		else if (!strcasecmp(tmp, ".tar"))
 			*tmp = '\0';
+		else if (!strcasecmp(tmp, ".lzh"))
+			*tmp = '\0';
 		tmp = strrchr(node->name, '.');
 		if (tmp)
 		{		/* maybe we still have to remove a leftover ".tar" */
@@ -154,7 +156,8 @@
 							if (!strcasecmp(tmp, ".zip") ||
 							    !strcasecmp(tmp, ".wsz") ||
 							    !strcasecmp(tmp, ".tgz") ||
-							    !strcasecmp(tmp, ".gz") ||
+							    !strcasecmp(tmp, ".lzh") ||
+							    !strcasecmp(tmp, ".gz")  ||
 							    !strcasecmp(tmp, ".bz2"))
 								add_skin(file);
 							else
diff -Naur xmms-1.2.4/xmms/textbox.c xmms-1.2.4j-20001128/xmms/textbox.c
--- xmms-1.2.4/xmms/textbox.c	Fri Oct 20 22:40:33 2000
+++ xmms-1.2.4j-20001128/xmms/textbox.c	Tue Nov 28 16:31:35 2000
@@ -20,6 +20,9 @@
 #include <ctype.h>
 
 static void textbox_generate_pixmap(TextBox * tb);
+#ifndef NO_TRANSPARENT_TEXTBOX
+static void textbox_draw_xfont_pixmap_scrolled(TextBox * tb);
+#endif
 
 static void textbox_draw(Widget * w)
 {
@@ -73,6 +76,9 @@
 			tb->tb_offset += 5;
 		if (tb->tb_offset >= tb->tb_pixmap_width)
 			tb->tb_offset -= tb->tb_pixmap_width;
+#ifndef NO_TRANSPARENT_TEXTBOX
+		textbox_draw_xfont_pixmap_scrolled(tb);
+#endif
 		draw_widget(tb);
 	}
 	return TRUE;
@@ -105,6 +111,9 @@
 				tb->tb_offset += tb->tb_pixmap_width;
 			while (tb->tb_offset > tb->tb_pixmap_width)
 				tb->tb_offset -= tb->tb_pixmap_width;
+#ifndef NO_TRANSPARENT_TEXTBOX
+			textbox_draw_xfont_pixmap_scrolled(tb);
+#endif
 			draw_widget(tb);
 		}
 	}
@@ -161,6 +170,49 @@
 	draw_widget(tb);
 }
 
+#ifndef NO_TRANSPARENT_TEXTBOX
+/* Copied from _generate_xfont_pixmap() for easy cvs update(instead of subroutinizing) */
+static void textbox_draw_xfont_pixmap_scrolled(TextBox * tb)
+{
+	gint length, i;
+	GdkGC *gc, *maskgc;
+	GdkColor *c, pattern;
+	GdkBitmap *mask;
+	gchar *pixmaptext = tb->tb_pixmap_text;
+	gint w;
+
+	length = strlen(pixmaptext);
+
+	gc = tb->tb_widget.gc;
+	skin_draw_pixmap(tb->tb_pixmap, gc, SKIN_MAIN, tb->tb_widget.x, tb->tb_widget.y, tb->tb_offset, 0, tb->tb_widget.width, tb->tb_widget.height);
+	w = tb->tb_pixmap_width - tb->tb_offset;
+	if (w < tb->tb_widget.width)
+		skin_draw_pixmap(tb->tb_pixmap, gc, SKIN_MAIN, tb->tb_widget.x + w, tb->tb_widget.y, 0, 0, tb->tb_widget.width, tb->tb_widget.height);
+
+	mask = gdk_pixmap_new(mainwin->window, tb->tb_pixmap_width, tb->tb_widget.height, 1);
+	maskgc = gdk_gc_new(mask);
+	pattern.pixel = 0;
+	gdk_gc_set_foreground(maskgc, &pattern);
+	gdk_draw_rectangle(mask, maskgc, TRUE, 0, 0, tb->tb_pixmap_width, tb->tb_widget.height);
+	pattern.pixel = 1;
+	gdk_gc_set_foreground(maskgc, &pattern);
+
+	gdk_draw_text(mask, tb->tb_font, maskgc, 0, tb->tb_font->ascent, pixmaptext, length);
+	gdk_gc_unref(maskgc);
+
+	gdk_gc_set_clip_mask(gc, mask);
+	gdk_gc_set_clip_origin(gc, 0, 0);
+	c = get_skin_color(SKIN_TEXTFG);
+	for (i = 0; i < tb->tb_widget.height; i++)
+	{
+		gdk_gc_set_foreground(gc, &c[6 * i / tb->tb_widget.height]);
+		gdk_draw_line(tb->tb_pixmap, gc, 0, i, tb->tb_pixmap_width, i);
+	}
+	gdk_pixmap_unref(mask);
+	gdk_gc_set_clip_mask(gc, NULL);
+}
+#endif
+
 static void textbox_generate_xfont_pixmap(TextBox * tb, gchar *pixmaptext)
 {
 	gint length, i;
@@ -176,12 +228,16 @@
 	tb->tb_pixmap = gdk_pixmap_new(mainwin->window, tb->tb_pixmap_width,
 				       tb->tb_widget.height, gdk_rgb_get_visual()->depth);
 	gc = tb->tb_widget.gc;
+#ifndef NO_TRANSPARENT_TEXTBOX
+	skin_draw_pixmap(tb->tb_pixmap, gc, SKIN_MAIN, tb->tb_widget.x, tb->tb_widget.y, 0, 0, tb->tb_widget.width, tb->tb_widget.height);
+#else
 	c = get_skin_color(SKIN_TEXTBG);
 	for (i = 0; i < tb->tb_widget.height; i++)
 	{
 		gdk_gc_set_foreground(gc, &c[6 * i / tb->tb_widget.height]);
 		gdk_draw_line(tb->tb_pixmap, gc, 0, i, tb->tb_pixmap_width, i);
 	}
+#endif
 
 	mask = gdk_pixmap_new(mainwin->window, tb->tb_pixmap_width, tb->tb_widget.height, 1);
 	maskgc = gdk_gc_new(mask);
@@ -194,6 +250,7 @@
 	gdk_gc_unref(maskgc);
 
 	gdk_gc_set_clip_mask(gc, mask);
+	gdk_gc_set_clip_origin(gc, 0, 0);
 	c = get_skin_color(SKIN_TEXTFG);
 	for (i = 0; i < tb->tb_widget.height; i++)
 	{
diff -Naur xmms-1.2.4/xmms/vis.c xmms-1.2.4j-20001128/xmms/vis.c
--- xmms-1.2.4/xmms/vis.c	Thu Feb 17 06:06:00 2000
+++ xmms-1.2.4j-20001128/xmms/vis.c	Tue Nov 28 16:31:35 2000
@@ -112,6 +112,72 @@
 	}
 }
 
+#ifndef NO_TRANSPARENT_VIS
+static GdkBitmap *
+create_vis_clip_mask(GdkWindow *win, guchar *rgb_data, guchar bg, gboolean double_sized)
+{
+	GdkBitmap *mask_bitmap;
+	GdkGC *gc;
+	GdkImage *mask_image;
+	GdkColor pattern;
+	guchar *mask, *p;
+	gint x, y, i, b;
+	gint w, h;
+
+	p = mask = g_malloc(double_sized ? 19 * 32 : 10 * 16);
+	if (double_sized) {
+		w = 152;
+		h = 32;
+		for (y = 0; y < 32; y += 2) {
+			for (x = 0; x < 152; x += 8) {
+				b = 0;
+				for (i = 0; i < 8; i += 2) {
+					b <<= 2;
+					b |= (rgb_data[y * 152 + x + i] == bg) ? 3 : 0;
+				}
+				*(p +  0) = b;
+				*(p + 19) = b;
+				p++;
+			}
+			p += 19;
+		}
+	} else {
+		w = 76;
+		h = 16;
+		for (y = 0; y < 16; y++) {
+			for (x = 0; x < 72; x += 8) {
+				b = 0;
+				for (i = 0; i < 8; i++) {
+					b <<= 1;
+					b |= (rgb_data[y * 76 + x + i] == bg) ? 1 : 0;
+				}
+				*p++ = b;
+			}
+			b = 0;
+			for (i = 0; i < 4; i++) {
+				b <<= 1;
+				b |= (rgb_data[y * 76 + x + i] == bg) ? 1 : 0;
+			}
+			b <<= 4;
+			*p++ = b;
+		}
+	}
+
+	mask_image = gdk_image_new_bitmap(gdk_visual_get_best(), mask, w, h);
+	mask_bitmap = gdk_pixmap_new(win, w, h, 1);
+	gc = gdk_gc_new(mask_bitmap);
+	pattern.pixel = 0;
+	gdk_gc_set_foreground(gc, &pattern);
+	pattern.pixel = 1;
+	gdk_gc_set_background(gc, &pattern);
+	gdk_draw_image(mask_bitmap, gc, mask_image, 0, 0, 0, 0, w, h);
+	gdk_gc_destroy(gc);
+	gdk_image_destroy(mask_image);
+
+	return mask_bitmap;
+}
+#endif
+
 void vis_draw(Widget * w)
 {
 	Vis *vis = (Vis *) w;
@@ -136,12 +202,14 @@
 	if (!vis->vs_doublesize)
 	{
 		memset(rgb_data, 0, 76 * 16);
+#ifdef NO_TRANSPARENT_VIS
 		for (y = 1; y < 16; y += 2)
 		{
 			ptr = rgb_data + (y * 76);
 			for (x = 0; x < 76; x += 2, ptr += 2)
 				*ptr = 1;
 		}
+#endif
 		if (cfg.vis_type == VIS_ANALYZER)
 		{
 			for (x = 0; x < 75; x++)
@@ -235,11 +303,26 @@
 			}
 		}
 
-		gdk_draw_indexed_image(vis->vs_window, vis->vs_widget.gc, vis->vs_widget.x, vis->vs_widget.y, vis->vs_widget.width, vis->vs_widget.height, GDK_RGB_DITHER_NORMAL, (guchar *) rgb_data, 76, cmap);
+#ifndef NO_TRANSPARENT_VIS
+		{
+			GdkBitmap *mask;
+
+			mask = create_vis_clip_mask(vis->vs_window, rgb_data, 0, 0);
+			gdk_gc_set_clip_mask(vis->vs_widget.gc, mask);
+			gdk_gc_set_clip_origin(vis->vs_widget.gc, vis->vs_widget.x, vis->vs_widget.y);
+			vis_clear(vis);
+			gdk_draw_indexed_image(vis->vs_window, vis->vs_widget.gc, vis->vs_widget.x, vis->vs_widget.y, vis->vs_widget.width, vis->vs_widget.height, GDK_RGB_DITHER_NORMAL, (guchar *) rgb_data, 76, cmap);
+			gdk_gc_set_clip_mask(vis->vs_widget.gc, NULL);
+			gdk_bitmap_unref(mask);
+		}
+#else
+			gdk_draw_indexed_image(vis->vs_window, vis->vs_widget.gc, vis->vs_widget.x, vis->vs_widget.y, vis->vs_widget.width, vis->vs_widget.height, GDK_RGB_DITHER_NORMAL, (guchar *) rgb_data, 76, cmap);
+#endif
 	}
 	else
 	{
 		memset(rgb_data, 0, 152 * 32);
+#ifdef NO_TRANSPARENT_VIS
 		for (y = 1; y < 16; y += 2)
 		{
 			ptr = rgb_data + (y * 304);
@@ -251,6 +334,7 @@
 				*(ptr + 153) = 1;
 			}
 		}
+#endif
 		if (cfg.vis_type == VIS_ANALYZER)
 		{
 			for (x = 0; x < 75; x++)
@@ -383,8 +467,21 @@
 				}
 			}
 		}
+#ifndef NO_TRANSPARENT_VIS
+		{
+			GdkBitmap *mask;
 
+			mask = create_vis_clip_mask(vis->vs_window, rgb_data, 0, 1);
+			gdk_gc_set_clip_mask(vis->vs_widget.gc, mask);
+			gdk_gc_set_clip_origin(vis->vs_widget.gc, vis->vs_widget.x << 1, vis->vs_widget.y << 1);
+			vis_clear(vis);
+			gdk_draw_indexed_image(vis->vs_window, vis->vs_widget.gc, vis->vs_widget.x << 1, vis->vs_widget.y << 1, vis->vs_widget.width << 1, vis->vs_widget.height << 1, GDK_RGB_DITHER_NORMAL, (guchar *) rgb_data, 152, cmap);
+			gdk_gc_set_clip_mask(vis->vs_widget.gc, NULL);
+			gdk_bitmap_unref(mask);
+		}
+#else
 		gdk_draw_indexed_image(vis->vs_window, vis->vs_widget.gc, vis->vs_widget.x << 1, vis->vs_widget.y << 1, vis->vs_widget.width << 1, vis->vs_widget.height << 1, GDK_RGB_DITHER_NONE, (guchar *) rgb_data, 152, cmap);
+#endif
 	}
 	gdk_rgb_cmap_free(cmap);
 	GDK_THREADS_LEAVE();
diff -Naur xmms-1.2.4/xmms/xmms.h xmms-1.2.4j-20001128/xmms/xmms.h
--- xmms-1.2.4/xmms/xmms.h	Thu Jun  1 11:56:20 2000
+++ xmms-1.2.4j-20001128/xmms/xmms.h	Tue Nov 28 16:31:35 2000
@@ -39,6 +39,8 @@
 
 #include <math.h>
 
+#include "config.h"
+
 #include "bmp.h"
 #include "util.h"
 #include "skin.h"
@@ -82,7 +84,5 @@
 #include "sm.h"
 #include "dnd.h"
 #include "urldecode.h"
-
-#include "config.h"
 
 #endif
