diff -ur xmms-1.2.7.orig/xmms/about.c xmms-1.2.7/xmms/about.c
--- xmms-1.2.7.orig/xmms/about.c	Wed Jan 16 15:11:55 2002
+++ xmms-1.2.7/xmms/about.c	Sat Aug 17 21:21:54 2002
@@ -70,6 +70,8 @@
 	N_("Chris Wilson"),
 	N_("Dave Yearke"),
 	N_("Stephan K. Zitz"),
+/* for languages that can't display 'l slash' (³) replace it with "l" */
+	N_("Micha³ Kochanowicz"),
 	NULL,
  N_("Homepage and Graphics:"),
 	N_("Thomas Nilsson"),
diff -ur xmms-1.2.7.orig/xmms/input.c xmms-1.2.7/xmms/input.c
--- xmms-1.2.7.orig/xmms/input.c	Wed Jul 11 14:19:23 2001
+++ xmms-1.2.7/xmms/input.c	Sat Aug 17 23:00:16 2002
@@ -221,6 +221,72 @@
 	pthread_mutex_unlock(&vis_mutex);
 }
 
+void input_unplayable_window_destroyed(GtkObject *object, gpointer user_data)
+{
+	*((GtkWidget **)user_data) = NULL;
+}
+
+void input_dont_show_warrning(GtkObject *object, gpointer user_data)
+{
+	*((gboolean *)user_data) = !gtk_toggle_button_get_active(GTK_TOGGLE_BUTTON(object));
+}
+
+void input_show_unplayable_file_warrning(gchar * filename)
+{
+	static GtkWidget *unplayables_window = NULL;
+	static GtkWidget *list;
+
+	GList *l = NULL;
+
+	if(!unplayables_window) {
+		GtkWidget *label, *button, *scrolled;
+		GtkWidget *check;
+		GtkWidget *vbox;
+
+		unplayables_window = gtk_window_new(GTK_WINDOW_DIALOG);
+		gtk_window_set_default_size(GTK_WINDOW(unplayables_window), 300, 400);
+		gtk_window_set_title(GTK_WINDOW(unplayables_window), _("Unplayable files"));
+		gtk_window_set_policy(GTK_WINDOW(unplayables_window), FALSE, TRUE, FALSE);
+		gtk_container_set_border_width(GTK_CONTAINER(unplayables_window), 10);
+		gtk_signal_connect(GTK_OBJECT(unplayables_window), "destroy",
+				   GTK_SIGNAL_FUNC(input_unplayable_window_destroyed), &unplayables_window);
+		gtk_widget_realize(unplayables_window);
+		
+		vbox = gtk_vbox_new(FALSE, 4);
+		label = gtk_label_new("Following files could not be played. They are either not accessible or require dedicated input plugin (xmms-input-*-.rpm).");
+		scrolled = gtk_scrolled_window_new(NULL, NULL);
+		list = gtk_list_new();
+		gtk_scrolled_window_add_with_viewport(GTK_SCROLLED_WINDOW(scrolled), list);
+		check = gtk_check_button_new_with_label("don't show this warrning any more");
+		button = gtk_button_new_with_label("close");
+
+		gtk_signal_connect_object(GTK_OBJECT(button), "clicked",
+			GTK_SIGNAL_FUNC(gtk_widget_destroy),
+			GTK_OBJECT(unplayables_window));
+
+		gtk_signal_connect(GTK_OBJECT(check), "clicked",
+			GTK_SIGNAL_FUNC(input_dont_show_warrning), &cfg.warn_about_unplayables);
+
+		gtk_box_pack_start(GTK_BOX(vbox), label, FALSE, FALSE, 0);
+		gtk_box_pack_start(GTK_BOX(vbox), scrolled, TRUE, TRUE, 0);
+		gtk_box_pack_start(GTK_BOX(vbox), check, FALSE, FALSE, 0);
+		gtk_box_pack_start(GTK_BOX(vbox), button, FALSE, FALSE, 0);
+		
+		gtk_container_add(GTK_CONTAINER(unplayables_window), vbox);
+	}
+	
+	l = g_list_append(l, gtk_list_item_new_with_label(filename));
+	gtk_list_append_items(GTK_LIST(list), l);
+	
+	gtk_widget_show_all(unplayables_window);
+}
+
+void input_file_not_playable(gchar * filename)
+{
+	if(cfg.warn_about_unplayables)
+		input_show_unplayable_file_warrning(filename);
+}
+
 gboolean input_check_file(gchar * filename)
 {
 	GList *node;
@@ -235,6 +301,7 @@
 			return TRUE;
 		node = node->next;
 	}
+	input_file_not_playable(filename);
 	return FALSE;
 }
 
@@ -261,6 +328,7 @@
 	}
 	/* We set the playing flag even if no inputplugin
 	   recognizes the file. This way we are sure it will be skipped. */
+	input_file_not_playable(filename);
 	ip_data->playing = TRUE;
 	set_current_input_plugin(NULL);
 }
diff -ur xmms-1.2.7.orig/xmms/main.c xmms-1.2.7/xmms/main.c
--- xmms-1.2.7.orig/xmms/main.c	Wed Feb 27 15:30:28 2002
+++ xmms-1.2.7/xmms/main.c	Sat Aug 17 22:25:02 2002
@@ -347,6 +347,7 @@
 	cfg.random_skin_on_play = FALSE;
 	cfg.mainwin_use_xfont = FALSE;
 	cfg.read_pl_metadata = TRUE;
+	cfg.warn_about_unplayables = TRUE;
 
 	cfg.playlist_x = 295;
 	cfg.playlist_y = 20;
@@ -400,6 +401,7 @@
 		xmms_cfg_read_boolean(cfgfile, "xmms", "no_playlist_advance", &cfg.no_playlist_advance);
 		xmms_cfg_read_boolean(cfgfile, "xmms", "sort_jump_to_file", &cfg.sort_jump_to_file);
 		xmms_cfg_read_boolean(cfgfile, "xmms", "read_pl_metadata", &cfg.read_pl_metadata);
+		xmms_cfg_read_boolean(cfgfile, "xmms", "warn_about_unplayables", &cfg.warn_about_unplayables);
 		xmms_cfg_read_boolean(cfgfile, "xmms", "smooth_title_scroll", &cfg.smooth_title_scroll);
 		xmms_cfg_read_boolean(cfgfile, "xmms", "use_backslash_as_dir_delimiter", &cfg.use_backslash_as_dir_delimiter);
 		xmms_cfg_read_int(cfgfile, "xmms", "player_x", &cfg.player_x);
@@ -562,6 +564,7 @@
 	xmms_cfg_write_boolean(cfgfile, "xmms", "dim_titlebar", cfg.dim_titlebar);
 	xmms_cfg_write_boolean(cfgfile, "xmms", "save_playlist_position", cfg.save_playlist_position);
 	xmms_cfg_write_boolean(cfgfile, "xmms", "read_pl_metadata", cfg.read_pl_metadata);
+	xmms_cfg_write_boolean(cfgfile, "xmms", "warn_about_unplayables", cfg.warn_about_unplayables);
 	xmms_cfg_write_boolean(cfgfile, "xmms", "open_rev_order", cfg.open_rev_order);
 	xmms_cfg_write_boolean(cfgfile, "xmms", "get_info_on_load", cfg.get_info_on_load);
 	xmms_cfg_write_boolean(cfgfile, "xmms", "get_info_on_demand", cfg.get_info_on_demand);
diff -ur xmms-1.2.7.orig/xmms/main.h xmms-1.2.7/xmms/main.h
--- xmms-1.2.7.orig/xmms/main.h	Mon Jan 21 15:22:38 2002
+++ xmms-1.2.7/xmms/main.h	Sat Aug 17 22:23:44 2002
@@ -43,6 +43,7 @@
 	gboolean get_info_on_demand, eq_doublesize_linked;
 	gboolean sort_jump_to_file, use_eplugins, always_on_top, sticky;
 	gboolean no_playlist_advance, smooth_title_scroll, read_pl_metadata;
+	gboolean warn_about_unplayables;
 	gboolean use_backslash_as_dir_delimiter;
 	gboolean random_skin_on_play, use_fontsets;
 	gboolean mainwin_use_xfont;
diff -ur xmms-1.2.7.orig/xmms/prefswin.c xmms-1.2.7/xmms/prefswin.c
--- xmms-1.2.7.orig/xmms/prefswin.c	Fri Nov 16 15:39:13 2001
+++ xmms-1.2.7/xmms/prefswin.c	Sat Aug 17 22:35:28 2002
@@ -911,6 +911,7 @@
 	gtk_table_attach_defaults(GTK_TABLE(options_table), options_mouse_box, 0, 1, 9, 10);
 	
 	prefswin_option_new_with_label_to_table(&cfg.read_pl_metadata, _("Read meta data from playlists"), GTK_TABLE(options_table), 1, 9);
+	prefswin_option_new_with_label_to_table(&cfg.warn_about_unplayables, _("Warn about not playable files"), GTK_TABLE(options_table), 0, 10);
 
 	gtk_notebook_append_page(GTK_NOTEBOOK(prefswin_notebook), prefswin_options_vbox, gtk_label_new(_("Options")));
 
