Index: layer3.c
===================================================================
RCS file: /cvs/xmms/Input/mpg123/layer3.c,v
retrieving revision 1.8
retrieving revision 1.9
diff -u -r1.8 -r1.9
--- xmms/Input/mpg123/layer3.c	2000/10/16 02:34:16	1.8
+++ xmms/Input/mpg123/layer3.c	2001/01/02 18:30:47	1.9
@@ -47,60 +47,54 @@
 
 struct bandInfoStruct bandInfo[9] =
 {
-
 /* MPEG 1.0 */
-	{
-		{0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 52, 62, 74, 90, 110, 134, 162, 196, 238, 288, 342, 418, 576},
-		{4, 4, 4, 4, 4, 4, 6, 6, 8, 8, 10, 12, 16, 20, 24, 28, 34, 42, 50, 54, 76, 158},
-		{0, 4 * 3, 8 * 3, 12 * 3, 16 * 3, 22 * 3, 30 * 3, 40 * 3, 52 * 3, 66 * 3, 84 * 3, 106 * 3, 136 * 3, 192 * 3},
-		{4, 4, 4, 4, 6, 8, 10, 12, 14, 18, 22, 30, 56}},
-
-	{
-		{0, 4, 8, 12, 16, 20, 24, 30, 36, 42, 50, 60, 72, 88, 106, 128, 156, 190, 230, 276, 330, 384, 576},
-		{4, 4, 4, 4, 4, 4, 6, 6, 6, 8, 10, 12, 16, 18, 22, 28, 34, 40, 46, 54, 54, 192},
-		{0, 4 * 3, 8 * 3, 12 * 3, 16 * 3, 22 * 3, 28 * 3, 38 * 3, 50 * 3, 64 * 3, 80 * 3, 100 * 3, 126 * 3, 192 * 3},
-		{4, 4, 4, 4, 6, 6, 10, 12, 14, 16, 20, 26, 66}},
-
-	{
-		{0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 54, 66, 82, 102, 126, 156, 194, 240, 296, 364, 448, 550, 576},
-		{4, 4, 4, 4, 4, 4, 6, 6, 8, 10, 12, 16, 20, 24, 30, 38, 46, 56, 68, 84, 102, 26},
-		{0, 4 * 3, 8 * 3, 12 * 3, 16 * 3, 22 * 3, 30 * 3, 42 * 3, 58 * 3, 78 * 3, 104 * 3, 138 * 3, 180 * 3, 192 * 3},
-		{4, 4, 4, 4, 6, 8, 12, 16, 20, 26, 34, 42, 12}},
+ { {0,4,8,12,16,20,24,30,36,44,52,62,74, 90,110,134,162,196,238,288,342,418,576},
+   {4,4,4,4,4,4,6,6,8, 8,10,12,16,20,24,28,34,42,50,54, 76,158},
+   {0,4*3,8*3,12*3,16*3,22*3,30*3,40*3,52*3,66*3, 84*3,106*3,136*3,192*3},
+   {4,4,4,4,6,8,10,12,14,18,22,30,56} } ,
+
+ { {0,4,8,12,16,20,24,30,36,42,50,60,72, 88,106,128,156,190,230,276,330,384,576},
+   {4,4,4,4,4,4,6,6,6, 8,10,12,16,18,22,28,34,40,46,54, 54,192},
+   {0,4*3,8*3,12*3,16*3,22*3,28*3,38*3,50*3,64*3, 80*3,100*3,126*3,192*3},
+   {4,4,4,4,6,6,10,12,14,16,20,26,66} } ,
+
+ { {0,4,8,12,16,20,24,30,36,44,54,66,82,102,126,156,194,240,296,364,448,550,576} ,
+   {4,4,4,4,4,4,6,6,8,10,12,16,20,24,30,38,46,56,68,84,102, 26} ,
+   {0,4*3,8*3,12*3,16*3,22*3,30*3,42*3,58*3,78*3,104*3,138*3,180*3,192*3} ,
+   {4,4,4,4,6,8,12,16,20,26,34,42,12} }  ,
 
 /* MPEG 2.0 */
-	{
-		{0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464, 522, 576},
-		{6, 6, 6, 6, 6, 6, 8, 10, 12, 14, 16, 20, 24, 28, 32, 38, 46, 52, 60, 68, 58, 54},
-		{0, 4 * 3, 8 * 3, 12 * 3, 18 * 3, 24 * 3, 32 * 3, 42 * 3, 56 * 3, 74 * 3, 100 * 3, 132 * 3, 174 * 3, 192 * 3},
-		{4, 4, 4, 6, 6, 8, 10, 14, 18, 26, 32, 42, 18}},
-
-	{
-		{0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 114, 136, 162, 194, 232, 278, 330, 394, 464, 540, 576},
-		{6, 6, 6, 6, 6, 6, 8, 10, 12, 14, 16, 18, 22, 26, 32, 38, 46, 52, 64, 70, 76, 36},
-		{0, 4 * 3, 8 * 3, 12 * 3, 18 * 3, 26 * 3, 36 * 3, 48 * 3, 62 * 3, 80 * 3, 104 * 3, 136 * 3, 180 * 3, 192 * 3},
-		{4, 4, 4, 6, 8, 10, 12, 14, 18, 24, 32, 44, 12}},
-
-	{
-		{0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464, 522, 576},
-		{6, 6, 6, 6, 6, 6, 8, 10, 12, 14, 16, 20, 24, 28, 32, 38, 46, 52, 60, 68, 58, 54},
-		{0, 4 * 3, 8 * 3, 12 * 3, 18 * 3, 26 * 3, 36 * 3, 48 * 3, 62 * 3, 80 * 3, 104 * 3, 134 * 3, 174 * 3, 192 * 3},
-		{4, 4, 4, 6, 8, 10, 12, 14, 18, 24, 30, 40, 18}},
+ { {0,6,12,18,24,30,36,44,54,66,80,96,116,140,168,200,238,284,336,396,464,522,576},
+   {6,6,6,6,6,6,8,10,12,14,16,20,24,28,32,38,46,52,60,68,58,54 } ,
+   {0,4*3,8*3,12*3,18*3,24*3,32*3,42*3,56*3,74*3,100*3,132*3,174*3,192*3} ,
+   {4,4,4,6,6,8,10,14,18,26,32,42,18 } } ,
+/*
+ { {0,6,12,18,24,30,36,44,54,66,80,96,114,136,162,194,232,278,330,394,464,540,576},
+   {6,6,6,6,6,6,8,10,12,14,16,18,22,26,32,38,46,52,64,70,76,36 } ,
+*/
+/* changed 19th value fropm 330 to 332 */
+ { {0,6,12,18,24,30,36,44,54,66,80,96,114,136,162,194,232,278,332,394,464,540,576},
+   {6,6,6,6,6,6,8,10,12,14,16,18,22,26,32,38,46,54,62,70,76,36 } ,
+   {0,4*3,8*3,12*3,18*3,26*3,36*3,48*3,62*3,80*3,104*3,136*3,180*3,192*3} ,
+   {4,4,4,6,8,10,12,14,18,24,32,44,12 } } ,
+
+ { {0,6,12,18,24,30,36,44,54,66,80,96,116,140,168,200,238,284,336,396,464,522,576},
+   {6,6,6,6,6,6,8,10,12,14,16,20,24,28,32,38,46,52,60,68,58,54 },
+   {0,4*3,8*3,12*3,18*3,26*3,36*3,48*3,62*3,80*3,104*3,134*3,174*3,192*3},
+   {4,4,4,6,8,10,12,14,18,24,30,40,18 } } ,
 /* MPEG 2.5 */
-	{
-		{0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464, 522, 576},
-		{6, 6, 6, 6, 6, 6, 8, 10, 12, 14, 16, 20, 24, 28, 32, 38, 46, 52, 60, 68, 58, 54},
-		{0, 12, 24, 36, 54, 78, 108, 144, 186, 240, 312, 402, 522, 576},
-		{4, 4, 4, 6, 8, 10, 12, 14, 18, 24, 30, 40, 18}},
-	{
-		{0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464, 522, 576},
-		{6, 6, 6, 6, 6, 6, 8, 10, 12, 14, 16, 20, 24, 28, 32, 38, 46, 52, 60, 68, 58, 54},
-		{0, 12, 24, 36, 54, 78, 108, 144, 186, 240, 312, 402, 522, 576},
-		{4, 4, 4, 6, 8, 10, 12, 14, 18, 24, 30, 40, 18}},
-	{
-		{0, 12, 24, 36, 48, 60, 72, 88, 108, 132, 160, 192, 232, 280, 336, 400, 476, 566, 568, 570, 572, 574, 576},
-		{12, 12, 12, 12, 12, 12, 16, 20, 24, 28, 32, 40, 48, 56, 64, 76, 90, 2, 2, 2, 2, 2},
-		{0, 24, 48, 72, 108, 156, 216, 288, 372, 480, 486, 492, 498, 576},
-		{8, 8, 8, 12, 16, 20, 24, 28, 36, 2, 2, 2, 26}},
+ { {0,6,12,18,24,30,36,44,54,66,80,96,116,140,168,200,238,284,336,396,464,522,576} ,
+   {6,6,6,6,6,6,8,10,12,14,16,20,24,28,32,38,46,52,60,68,58,54},
+   {0,12,24,36,54,78,108,144,186,240,312,402,522,576},
+   {4,4,4,6,8,10,12,14,18,24,30,40,18} },
+ { {0,6,12,18,24,30,36,44,54,66,80,96,116,140,168,200,238,284,336,396,464,522,576} ,
+   {6,6,6,6,6,6,8,10,12,14,16,20,24,28,32,38,46,52,60,68,58,54},
+   {0,12,24,36,54,78,108,144,186,240,312,402,522,576},
+   {4,4,4,6,8,10,12,14,18,24,30,40,18} },
+ { {0,12,24,36,48,60,72,88,108,132,160,192,232,280,336,400,476,566,568,570,572,574,576},
+   {12,12,12,12,12,12,16,20,24,28,32,40,48,56,64,76,90,2,2,2,2,2},
+   {0, 24, 48, 72,108,156,216,288,372,480,486,492,498,576},
+   {8,8,8,12,16,20,24,28,36,2,2,2,26} } ,
 };
 
 static int mapbuf0[9][152];
@@ -412,8 +406,10 @@
 				gr_info->table_select[0] = mpg123_getbits_fast(5);
 				gr_info->table_select[1] = mpg123_getbits_fast(5);
 				/*
-				 * table_select[2] not needed, because there is no region2,
-				 * but to satisfy some verifications tools we set it either.
+				 * table_select[2] not needed, because
+				 * there is no region2, but to satisfy
+				 * some verifications tools we set it
+				 * either.
 				 */
 				gr_info->table_select[2] = 0;
 				for (i = 0; i < 3; i++)
@@ -934,9 +930,9 @@
 				{
 					mc = *m++;
 					cb = *m++;
-					if (cb == 21)
-						v = 0.0;
-					else
+/*  					if (cb == 21) */
+/*  						v = 0.0; */
+/*  					else */
 						v = gr_info->pow2gain[((*scf++) + (*pretab++)) << shift];
 
 				}
@@ -1038,9 +1034,9 @@
 					{
 						mc = *m++;
 						cb = *m++;
-						if (cb == 21)
-							v = 0.0;
-						else
+/*  						if (cb == 21) */
+/*  							v = 0.0; */
+/*  						else */
 							v = gr_info->pow2gain[((*scf++) + (*pretab++)) << shift];
 					}
 					mc--;
@@ -1264,23 +1260,23 @@
 				else
 					idx += sb;
 			}
-		}
 
-		is_p = scalefac[20];
-		if (is_p != 7)
-		{		/* copy l-band 20 to l-band 21 */
-			int sb;
-			real t1 = tab1[is_p], t2 = tab2[is_p];
+			is_p = scalefac[20];
+			if (is_p != 7)
+			{		/* copy l-band 20 to l-band 21 */
+				int sb;
+				real t1 = tab1[is_p], t2 = tab2[is_p];
 
-			for (sb = bi->longDiff[21]; sb > 0; sb--, idx++)
-			{
-				real v = xr[0][idx];
+				for (sb = bi->longDiff[21]; sb > 0; sb--, idx++)
+				{
+					real v = xr[0][idx];
 
-				xr[0][idx] = v * t1;
-				xr[1][idx] = v * t2;
+					xr[0][idx] = v * t1;
+					xr[1][idx] = v * t2;
+				}
 			}
 		}
-	}			/* ... */
+	}		/* ... */
 }
 
 static void III_antialias(real xr[SBLIMIT][SSLIMIT], struct gr_info_s *gr_info)
@@ -1841,15 +1837,9 @@
 /*
  * III_hybrid
  */
-#ifdef USE_3DNOW
 static void III_hybrid(real fsIn[SBLIMIT][SSLIMIT],
 		       real tsOut[SSLIMIT][SBLIMIT], int ch,
 		       struct gr_info_s *gr_info, struct frame *fr)
-#else
-static void III_hybrid(real fsIn[SBLIMIT][SSLIMIT],
-		       real tsOut[SSLIMIT][SBLIMIT], int ch,
-		       struct gr_info_s *gr_info)
-#endif
 {
 	static real block[2][2][SBLIMIT * SSLIMIT] = { {{0,}} };
 	static int blc[2] = { 0, 0 };
@@ -1869,13 +1859,13 @@
 	if (gr_info->mixed_block_flag)
 	{
 		sb = 2;
-	#ifdef USE_3DNOW
+#ifdef USE_3DNOW
 	     (fr->dct36)(fsIn[0],rawout1,rawout2,win[0],tspnt);
 	     (fr->dct36)(fsIn[1],rawout1+18,rawout2+18,win1[0],tspnt+1);
-	#else
+#else
 		dct36(fsIn[0], rawout1, rawout2, win[0], tspnt);
 		dct36(fsIn[1], rawout1 + 18, rawout2 + 18, win1[0], tspnt + 1);
-	#endif
+#endif
 		rawout1 += 36;
 		rawout2 += 36;
 		tspnt += 2;
@@ -1894,13 +1884,13 @@
 	{
 		for (; sb < gr_info->maxb; sb += 2, tspnt += 2, rawout1 += 36, rawout2 += 36)
 		{
-		#ifdef USE_3DNOW
+#ifdef USE_3DNOW
 			(fr->dct36)(fsIn[sb],rawout1,rawout2,win[bt],tspnt);
 			(fr->dct36)(fsIn[sb+1],rawout1+18,rawout2+18,win1[bt],tspnt+1);
-		#else
+#else
 			dct36(fsIn[sb], rawout1, rawout2, win[bt], tspnt);
 			dct36(fsIn[sb + 1], rawout1 + 18, rawout2 + 18, win1[bt], tspnt + 1);
-		#endif
+#endif
 		}
 	}
 
@@ -2065,11 +2055,7 @@
 			III_antialias(hybridIn[ch], gr_info);
 			if (gr_info->maxb < 1 || gr_info->maxb > SBLIMIT)
 				return 0;
-		#ifdef USE_3DNOW
-			III_hybrid(hybridIn[ch], hybridOut[ch], ch,gr_info,fr);
-		#else
-			III_hybrid(hybridIn[ch], hybridOut[ch], ch, gr_info);
-		#endif
+			III_hybrid(hybridIn[ch], hybridOut[ch], ch, gr_info, fr);
 		}
 
 		for (ss = 0; ss < SSLIMIT; ss++)
